name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
  DISPLAY: :0

jobs:
  python-code-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout repository

      - uses: chartboost/ruff-action@v1
        name: Ruff format check
        with:
          args: format --check .

  python-code-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout repository

      - uses: chartboost/ruff-action@v1
        name: Ruff linter check

  ts-code-style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Cache pnpm
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Node Dependencies
        run: pnpm install

      - name: Eslint check
        run: pnpm lint

      - name: Typescript check
        run: pnpm exec tsc --noEmit

      - name: Black Prettier check
        run: pnpm run check

  python-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.6"

      - uses: actions/cache@v3
        name: Cache Poetry
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install Python Dependencies
        run: poetry install --with dev

      - name: pytest
        run: |
          cd PYTHON
          poetry run python -m pytest --cov --cov-report=xml --ignore=blocks
          cd ..
          cd captain
          poetry run python -m pytest --cov --cov-report=xml --ignore=blocks

      - name: Codecov report
        uses: codecov/codecov-action@v3
        with:
          flags: python
