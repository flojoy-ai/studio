import { ElementsData } from "@/types";
import { ReactFlowJsonObject } from "reactflow";

export const NOISY_SINE: ReactFlowJsonObject<ElementsData> = {
  nodes: [
    {
      width: 72,
      height: 72,
      id: "ADD-a3c1e32a-5032-4bed-8814-29f803ace0b6",
      type: "ARITHMETIC",
      data: {
        id: "ADD-a3c1e32a-5032-4bed-8814-29f803ace0b6",
        label: "ADD",
        func: "ADD",
        type: "ARITHMETIC",
        ctrls: {},
        inputs: [
          {
            name: "a",
            id: "a",
            type: "OrderedPair|Scalar|Vector",
            multiple: false,
            desc: null,
          },
          {
            name: "b",
            id: "b",
            type: "OrderedPair|Scalar|Vector",
            multiple: true,
            desc: null,
          },
        ],
        outputs: [
          {
            name: "default",
            id: "default",
            type: "OrderedPair|Scalar|Vector",
            desc: null,
          },
        ],
        path: "PYTHON/nodes/TRANSFORMERS/ARITHMETIC/ADD/ADD.py",
        selected: false,
      },
      position: {
        x: 277.7769837518414,
        y: 72.74309296103615,
      },
      selected: false,
      positionAbsolute: {
        x: 277.7769837518414,
        y: 72.74309296103615,
      },
      dragging: true,
    },
    {
      width: 225,
      height: 226,
      id: "HISTOGRAM-f9483fdf-a2c0-4de2-bda5-8900acba4124",
      type: "VISUALIZERS",
      data: {
        id: "HISTOGRAM-f9483fdf-a2c0-4de2-bda5-8900acba4124",
        label: "HISTOGRAM",
        func: "HISTOGRAM",
        type: "VISUALIZERS",
        ctrls: {},
        inputs: [
          {
            name: "default",
            id: "default",
            type: "OrderedPair|DataFrame|Matrix",
            multiple: false,
            desc: null,
          },
        ],
        outputs: [
          {
            name: "default",
            id: "default",
            type: "Plotly",
            desc: null,
          },
        ],
        path: "PYTHON/nodes/VISUALIZERS/PLOTLY/HISTOGRAM/HISTOGRAM.py",
        selected: false,
      },
      position: {
        x: 450.22511735469914,
        y: 166.9790174482946,
      },
      selected: false,
      positionAbsolute: {
        x: 450.22511735469914,
        y: 166.9790174482946,
      },
      dragging: true,
    },
    {
      width: 225,
      height: 226,
      id: "SCATTER-55268351-79af-4a28-a22c-d85b261b9681",
      type: "VISUALIZERS",
      data: {
        id: "SCATTER-55268351-79af-4a28-a22c-d85b261b9681",
        label: "SCATTER",
        func: "SCATTER",
        type: "VISUALIZERS",
        ctrls: {},
        inputs: [
          {
            name: "default",
            id: "default",
            type: "OrderedPair|DataFrame|Matrix",
            multiple: false,
            desc: null,
          },
        ],
        outputs: [
          {
            name: "default",
            id: "default",
            type: "Plotly",
            desc: null,
          },
        ],
        path: "PYTHON/nodes/VISUALIZERS/PLOTLY/SCATTER/SCATTER.py",
        selected: false,
      },
      position: {
        x: 453.2609421482763,
        y: -224.53664602472713,
      },
      selected: false,
      positionAbsolute: {
        x: 453.2609421482763,
        y: -224.53664602472713,
      },
      dragging: true,
    },
    {
      width: 208,
      height: 96,
      id: "LINSPACE-2ed49441-b754-466d-83ed-a67759f7f6c0",
      type: "GENERATORS",
      data: {
        id: "LINSPACE-2ed49441-b754-466d-83ed-a67759f7f6c0",
        label: "LINSPACE",
        func: "LINSPACE",
        type: "GENERATORS",
        ctrls: {
          start: {
            type: "float",
            default: 10,
            desc: "The start point of the data.",
            overload: null,
            functionName: "LINSPACE",
            param: "start",
            value: 10,
          },
          end: {
            type: "float",
            default: 0,
            desc: "The end point of the data.",
            overload: null,
            functionName: "LINSPACE",
            param: "end",
            value: 0,
          },
          step: {
            type: "int",
            default: 1000,
            desc: "The number of points in the vector.",
            overload: null,
            functionName: "LINSPACE",
            param: "step",
            value: 1000,
          },
        },
        initCtrls: {},
        inputs: [
          {
            name: "default",
            id: "default",
            type: "Vector|OrderedPair",
            multiple: false,
            desc: "Optional input in case LINSPACE is used in a loop. Not used.",
          },
        ],
        outputs: [
          {
            name: "default",
            id: "default",
            type: "Vector",
            desc: "v: the vector between start and end with step number of points.",
          },
        ],
        path: "PYTHON/nodes/GENERATORS/SIMULATIONS/LINSPACE/LINSPACE.py",
        selected: false,
      },
      position: {
        x: -446.6779449770943,
        y: 76.62739294025627,
      },
      selected: false,
      positionAbsolute: {
        x: -446.6779449770943,
        y: 76.62739294025627,
      },
      dragging: true,
    },
    {
      width: 208,
      height: 96,
      id: "SINE-d03778f3-2abb-4853-b23f-a1064473cd5a",
      type: "GENERATORS",
      data: {
        id: "SINE-d03778f3-2abb-4853-b23f-a1064473cd5a",
        label: "SINE",
        func: "SINE",
        type: "GENERATORS",
        ctrls: {
          amplitude: {
            type: "float",
            default: 1,
            desc: "The amplitude of the wave.",
            overload: null,
            functionName: "SINE",
            param: "amplitude",
            value: 1,
          },
          frequency: {
            type: "float",
            default: 1,
            desc: "The wave frequency in radians/2pi.",
            overload: null,
            functionName: "SINE",
            param: "frequency",
            value: 1,
          },
          offset: {
            type: "float",
            default: 0,
            desc: "The y axis offset of the function.",
            overload: null,
            functionName: "SINE",
            param: "offset",
            value: 0,
          },
          phase: {
            type: "float",
            default: 0,
            desc: "The x axis offset of the function.",
            overload: null,
            functionName: "SINE",
            param: "phase",
            value: 0,
          },
          waveform: {
            type: "select",
            default: "sine",
            options: ["sine", "square", "triangle", "sawtooth"],
            desc: "The waveform type of the wave.",
            overload: null,
            functionName: "SINE",
            param: "waveform",
            value: "sine",
          },
        },
        initCtrls: {},
        inputs: [
          {
            name: "default",
            id: "default",
            type: "OrderedPair|Vector",
            multiple: false,
            desc: "Input that defines the x axis values of the function and output.",
          },
        ],
        outputs: [
          {
            name: "default",
            id: "default",
            type: "OrderedPair",
            desc: "x: the input v or x values\ny: the resulting sine function",
          },
        ],
        path: "PYTHON/nodes/GENERATORS/SIMULATIONS/SINE/SINE.py",
        selected: false,
      },
      position: {
        x: -85.39535700781825,
        y: -171.4931985718973,
      },
      selected: false,
      positionAbsolute: {
        x: -85.39535700781825,
        y: -171.4931985718973,
      },
      dragging: true,
    },
    {
      width: 208,
      height: 96,
      id: "CONSTANT-ca529c6c-e49c-4e1c-bea7-dd8efa0160df",
      type: "GENERATORS",
      data: {
        id: "CONSTANT-ca529c6c-e49c-4e1c-bea7-dd8efa0160df",
        label: "2.0",
        func: "CONSTANT",
        type: "GENERATORS",
        ctrls: {
          dc_type: {
            type: "select",
            default: "OrderedPair",
            options: ["Scalar", "Vector", "OrderedPair"],
            desc: "The type of DataContainer to return.",
            overload: null,
            functionName: "CONSTANT",
            param: "dc_type",
            value: "OrderedPair",
          },
          constant: {
            type: "float",
            default: 3,
            desc: "The value of the y axis output.",
            overload: null,
            functionName: "CONSTANT",
            param: "constant",
            value: 2,
          },
          step: {
            type: "float",
            default: 1000,
            desc: "The size of the y and x axes.",
            overload: null,
            functionName: "CONSTANT",
            param: "step",
            value: 1000,
          },
        },
        initCtrls: {},
        inputs: [
          {
            name: "default",
            id: "default",
            type: "Vector|OrderedPair",
            multiple: false,
            desc: "Optional input that defines the size of the output.",
          },
        ],
        outputs: [
          {
            name: "default",
            id: "default",
            type: "OrderedPair|Vector|Scalar",
            desc: null,
          },
        ],
        path: "PYTHON/nodes/GENERATORS/SIMULATIONS/CONSTANT/CONSTANT.py",
        selected: false,
      },
      position: {
        x: -86.25333493210161,
        y: 296.883272865433,
      },
      selected: false,
      positionAbsolute: {
        x: -86.25333493210161,
        y: 296.883272865433,
      },
      dragging: true,
    },
    {
      width: 208,
      height: 96,
      id: "RAND-588a97c2-50df-47ab-98f1-05cd83c017af",
      type: "GENERATORS",
      data: {
        id: "RAND-588a97c2-50df-47ab-98f1-05cd83c017af",
        label: "RAND",
        func: "RAND",
        type: "GENERATORS",
        ctrls: {
          distribution: {
            type: "select",
            default: "normal",
            options: ["normal", "uniform", "poisson"],
            desc: "the distribution over the random samples",
            overload: {
              uniform: ["lower_bound", "upper_bound"],
              normal: ["normal_mean", "normal_standard_deviation"],
              poisson: ["poisson_events"],
            },
            functionName: "RAND",
            param: "distribution",
            value: "normal",
          },
          lower_bound: {
            type: "float",
            default: 0,
            desc: "the lower bound of the output interval",
            overload: null,
            functionName: "RAND",
            param: "lower_bound",
            value: 0,
          },
          upper_bound: {
            type: "float",
            default: 1,
            desc: "the upper bound of the output interval",
            overload: null,
            functionName: "RAND",
            param: "upper_bound",
            value: 1,
          },
          normal_mean: {
            type: "float",
            default: 0,
            desc: 'the mean or "center" of the normal distribution',
            overload: null,
            functionName: "RAND",
            param: "normal_mean",
            value: 0,
          },
          normal_standard_deviation: {
            type: "float",
            default: 1,
            desc: 'the spread or "width" of the normal distribution',
            overload: null,
            functionName: "RAND",
            param: "normal_standard_deviation",
            value: 1,
          },
          poisson_events: {
            type: "float",
            default: 1,
            desc: "the expected number of events occurring in a fixed time-interval when distribution is poisson",
            overload: null,
            functionName: "RAND",
            param: "poisson_events",
            value: 1,
          },
        },
        initCtrls: {},
        inputs: [
          {
            name: "default",
            id: "default",
            type: "Vector|OrderedPair",
            multiple: false,
            desc: "Optional input to use as the x-axis for the random samples.",
          },
        ],
        outputs: [
          {
            name: "default",
            id: "default",
            type: "OrderedPair|Scalar",
            desc: "OrderedPair if there is an input.\nx: the x-axis of the input\ny: the random samples\n\nScalar if there is no input.\nc: the random number",
          },
        ],
        path: "PYTHON/nodes/GENERATORS/SIMULATIONS/RAND/RAND.py",
        selected: false,
      },
      position: {
        x: -85.5646100638108,
        y: 69.17076331075185,
      },
      selected: false,
      positionAbsolute: {
        x: -85.5646100638108,
        y: 69.17076331075185,
      },
      dragging: true,
    },
  ],
  edges: [
    {
      source: "ADD-a3c1e32a-5032-4bed-8814-29f803ace0b6",
      sourceHandle: "default",
      target: "HISTOGRAM-f9483fdf-a2c0-4de2-bda5-8900acba4124",
      targetHandle: "default",
      id: "reactflow__edge-ADD-a3c1e32a-5032-4bed-8814-29f803ace0b6default-HISTOGRAM-f9483fdf-a2c0-4de2-bda5-8900acba4124default",
    },
    {
      source: "ADD-a3c1e32a-5032-4bed-8814-29f803ace0b6",
      sourceHandle: "default",
      target: "SCATTER-55268351-79af-4a28-a22c-d85b261b9681",
      targetHandle: "default",
      id: "reactflow__edge-ADD-a3c1e32a-5032-4bed-8814-29f803ace0b6default-SCATTER-55268351-79af-4a28-a22c-d85b261b9681default",
    },
    {
      source: "LINSPACE-2ed49441-b754-466d-83ed-a67759f7f6c0",
      sourceHandle: "default",
      target: "SINE-d03778f3-2abb-4853-b23f-a1064473cd5a",
      targetHandle: "default",
      id: "reactflow__edge-LINSPACE-2ed49441-b754-466d-83ed-a67759f7f6c0default-SINE-d03778f3-2abb-4853-b23f-a1064473cd5adefault",
    },
    {
      source: "SINE-d03778f3-2abb-4853-b23f-a1064473cd5a",
      sourceHandle: "default",
      target: "ADD-a3c1e32a-5032-4bed-8814-29f803ace0b6",
      targetHandle: "a",
      id: "reactflow__edge-SINE-d03778f3-2abb-4853-b23f-a1064473cd5adefault-ADD-a3c1e32a-5032-4bed-8814-29f803ace0b6a",
    },
    {
      source: "LINSPACE-2ed49441-b754-466d-83ed-a67759f7f6c0",
      sourceHandle: "default",
      target: "CONSTANT-ca529c6c-e49c-4e1c-bea7-dd8efa0160df",
      targetHandle: "default",
      id: "reactflow__edge-LINSPACE-2ed49441-b754-466d-83ed-a67759f7f6c0default-CONSTANT-ca529c6c-e49c-4e1c-bea7-dd8efa0160dfdefault",
    },
    {
      source: "CONSTANT-ca529c6c-e49c-4e1c-bea7-dd8efa0160df",
      sourceHandle: "default",
      target: "ADD-a3c1e32a-5032-4bed-8814-29f803ace0b6",
      targetHandle: "b",
      id: "reactflow__edge-CONSTANT-ca529c6c-e49c-4e1c-bea7-dd8efa0160dfdefault-ADD-a3c1e32a-5032-4bed-8814-29f803ace0b6b",
    },
    {
      source: "LINSPACE-2ed49441-b754-466d-83ed-a67759f7f6c0",
      sourceHandle: "default",
      target: "RAND-588a97c2-50df-47ab-98f1-05cd83c017af",
      targetHandle: "default",
      id: "reactflow__edge-LINSPACE-2ed49441-b754-466d-83ed-a67759f7f6c0default-RAND-588a97c2-50df-47ab-98f1-05cd83c017afdefault",
    },
    {
      source: "RAND-588a97c2-50df-47ab-98f1-05cd83c017af",
      sourceHandle: "default",
      target: "ADD-a3c1e32a-5032-4bed-8814-29f803ace0b6",
      targetHandle: "b",
      id: "reactflow__edge-RAND-588a97c2-50df-47ab-98f1-05cd83c017afdefault-ADD-a3c1e32a-5032-4bed-8814-29f803ace0b6b",
    },
  ],
  viewport: {
    x: 856.868487733741,
    y: 419.9870814920555,
    zoom: 0.8906656665301391,
  },
};

export const EMPTY_CANVAS = {
  elements: [],
  position: [0, 0],
  zoom: 0.8,
};
