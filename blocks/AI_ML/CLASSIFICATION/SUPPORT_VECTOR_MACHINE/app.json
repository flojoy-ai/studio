{
    "rfInstance": {
        "nodes": [
            {
                "width": 216,
                "height": 328,
                "id": "SUPPORT_VECTOR_MACHINE-111df792-52d2-41ac-9662-1066da12d44b",
                "type": "AI_ML",
                "data": {
                    "id": "SUPPORT_VECTOR_MACHINE-111df792-52d2-41ac-9662-1066da12d44b",
                    "label": "SUPPORT VECTOR MACHINE",
                    "func": "SUPPORT_VECTOR_MACHINE",
                    "type": "AI_ML",
                    "ctrls": {
                        "kernel": {
                            "type": "select",
                            "default": "linear",
                            "options": [
                                "linear",
                                "poly",
                                "rbf",
                                "sigmoid",
                                "precomputed"
                            ],
                            "functionName": "SUPPORT_VECTOR_MACHINE",
                            "param": "kernel",
                            "value": "linear",
                            "desc": "Specifies the kernel type to be used in the algorithm.\nFor detailed information about kernel types:\nhttps://scikit-learn.org/stable/modules/svm.html#kernel-functions",
                            "overload": null
                        }
                    },
                    "inputs": [
                        {
                            "name": "train_feature",
                            "id": "train_feature",
                            "type": "DataFrame|Matrix",
                            "desc": null,
                            "multiple": false
                        },
                        {
                            "name": "train_label",
                            "id": "train_label",
                            "type": "DataFrame|Matrix",
                            "desc": null,
                            "multiple": false
                        },
                        {
                            "name": "input_data",
                            "id": "input_data",
                            "type": "DataFrame|Matrix",
                            "desc": null,
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "DataFrame",
                            "desc": "The predictions for the input data."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "scikit-learn",
                            "v": "1.2.2"
                        }
                    ],
                    "path": "AI_ML/CLASSIFICATION/SUPPORT_VECTOR_MACHINE/SUPPORT_VECTOR_MACHINE.py",
                    "selected": false
                },
                "position": {
                    "x": 1335.702765728109,
                    "y": 545.9751089789575
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 1335.702765728109,
                    "y": 545.9751089789575
                },
                "dragging": false
            },
            {
                "id": "READ_CSV-30889683-2832-4931-92d3-3655095a74db",
                "type": "EXTRACT",
                "data": {
                    "id": "READ_CSV-30889683-2832-4931-92d3-3655095a74db",
                    "label": "READ CSV 2",
                    "func": "READ_CSV",
                    "type": "EXTRACT",
                    "ctrls": {
                        "file_path": {
                            "type": "str",
                            "default": "https://raw.githubusercontent.com/cs109/2014_data/master/countries.csv",
                            "desc": "File path to the .csv file or an URL of a .csv file.",
                            "overload": null,
                            "functionName": "READ_CSV",
                            "param": "file_path",
                            "value": "./blocks/ETL/EXTRACT/FILE/READ_CSV/assets/iris_train.csv"
                        }
                    },
                    "initCtrls": {},
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "DataFrame",
                            "desc": "DataFrame loaded from .csv file"
                        }
                    ],
                    "path": "ETL/EXTRACT/FILE/READ_CSV/READ_CSV.py"
                },
                "position": {
                    "x": 315.80721762348867,
                    "y": 205.8968860927248
                },
                "width": 216,
                "height": 260,
                "selected": false,
                "positionAbsolute": {
                    "x": 315.80721762348867,
                    "y": 205.8968860927248
                },
                "dragging": false
            },
            {
                "id": "READ_CSV-b129bd06-805b-42c7-9329-c4e359b274e8",
                "type": "EXTRACT",
                "data": {
                    "id": "READ_CSV-b129bd06-805b-42c7-9329-c4e359b274e8",
                    "label": "READ CSV 3",
                    "func": "READ_CSV",
                    "type": "EXTRACT",
                    "ctrls": {
                        "file_path": {
                            "type": "str",
                            "default": "https://raw.githubusercontent.com/cs109/2014_data/master/countries.csv",
                            "desc": "File path to the .csv file or an URL of a .csv file.",
                            "overload": null,
                            "functionName": "READ_CSV",
                            "param": "file_path",
                            "value": "./blocks/ETL/EXTRACT/FILE/READ_CSV/assets/iris_test_no_label.csv"
                        }
                    },
                    "initCtrls": {},
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "DataFrame",
                            "desc": "DataFrame loaded from .csv file"
                        }
                    ],
                    "path": "ETL/EXTRACT/FILE/READ_CSV/READ_CSV.py"
                },
                "position": {
                    "x": 321.27618765731097,
                    "y": 593.7963955477085
                },
                "width": 216,
                "height": 260,
                "selected": false,
                "positionAbsolute": {
                    "x": 321.27618765731097,
                    "y": 593.7963955477085
                },
                "dragging": false
            },
            {
                "id": "EXTRACT_COLUMNS-0545e012-b814-4fa3-862e-eee90706362c",
                "type": "EXTRACT",
                "data": {
                    "id": "EXTRACT_COLUMNS-0545e012-b814-4fa3-862e-eee90706362c",
                    "label": "EXTRACT COLUMNS 1",
                    "func": "EXTRACT_COLUMNS",
                    "type": "EXTRACT",
                    "ctrls": {
                        "columns": {
                            "type": "Array",
                            "default": null,
                            "desc": "The columns to extract from the input dataframe",
                            "overload": null,
                            "functionName": "EXTRACT_COLUMNS",
                            "param": "columns",
                            "value": "variety"
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "DataFrame|Matrix",
                            "desc": "Input to use as the table for column extraction",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "DataFrame",
                            "desc": "DataFrame or Matrix with only the specified columns"
                        }
                    ],
                    "path": "ETL/EXTRACT/DATAFRAME/EXTRACT_COLUMNS/EXTRACT_COLUMNS.py"
                },
                "position": {
                    "x": 841.1658067237929,
                    "y": 353.88252196921417
                },
                "width": 216,
                "height": 296,
                "selected": false,
                "positionAbsolute": {
                    "x": 841.1658067237929,
                    "y": 353.88252196921417
                },
                "dragging": false
            },
            {
                "id": "EXTRACT_COLUMNS-4c6da2c7-4f06-4c0c-a452-84817df38733",
                "type": "EXTRACT",
                "data": {
                    "id": "EXTRACT_COLUMNS-4c6da2c7-4f06-4c0c-a452-84817df38733",
                    "label": "EXTRACT COLUMNS",
                    "func": "EXTRACT_COLUMNS",
                    "type": "EXTRACT",
                    "ctrls": {
                        "columns": {
                            "type": "Array",
                            "default": null,
                            "desc": "The columns to extract from the input dataframe",
                            "overload": null,
                            "functionName": "EXTRACT_COLUMNS",
                            "param": "columns",
                            "value": "sepal_length,sepal_width,petal_length,petal_width"
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "DataFrame|Matrix",
                            "desc": "Input to use as the table for column extraction",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "DataFrame",
                            "desc": "DataFrame or Matrix with only the specified columns"
                        }
                    ],
                    "path": "ETL/EXTRACT/DATAFRAME/EXTRACT_COLUMNS/EXTRACT_COLUMNS.py"
                },
                "position": {
                    "x": 840.3328183914539,
                    "y": 21.344722450526433
                },
                "width": 216,
                "height": 296,
                "selected": false,
                "positionAbsolute": {
                    "x": 840.3328183914539,
                    "y": 21.344722450526433
                },
                "dragging": false
            },
            {
                "id": "TABLE-659144a4-a348-4176-a5af-6072249ac807",
                "type": "VISUALIZATION",
                "data": {
                    "id": "TABLE-659144a4-a348-4176-a5af-6072249ac807",
                    "label": "TABLE",
                    "func": "TABLE",
                    "type": "VISUALIZATION",
                    "ctrls": {},
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "OrderedTriple|OrderedPair|DataFrame|Vector",
                            "desc": "the DataContainer to be visualized",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Plotly",
                            "desc": "the DataContainer containing the Plotly Table visualization"
                        }
                    ],
                    "path": "DATA/VISUALIZATION/PLOTLY/TABLE/TABLE.py"
                },
                "position": {
                    "x": 1813.0596051147795,
                    "y": 544.1310205428638
                },
                "width": 225,
                "height": 225,
                "selected": false,
                "positionAbsolute": {
                    "x": 1813.0596051147795,
                    "y": 544.1310205428638
                },
                "dragging": false
            }
        ],
        "edges": [
            {
                "id": "READ_CSV-30889683-2832-4931-92d3-3655095a74db->EXTRACT_COLUMNS-4c6da2c7-4f06-4c0c-a452-84817df38733_97113086-1408-47ac-a7e2-918a00047170",
                "source": "READ_CSV-30889683-2832-4931-92d3-3655095a74db",
                "target": "EXTRACT_COLUMNS-4c6da2c7-4f06-4c0c-a452-84817df38733",
                "sourceHandle": "default",
                "targetHandle": "default",
                "data": {
                    "outputType": "DataFrame"
                }
            },
            {
                "id": "READ_CSV-30889683-2832-4931-92d3-3655095a74db->EXTRACT_COLUMNS-0545e012-b814-4fa3-862e-eee90706362c_b7d25888-1d76-4ebf-9606-f62458b78570",
                "source": "READ_CSV-30889683-2832-4931-92d3-3655095a74db",
                "target": "EXTRACT_COLUMNS-0545e012-b814-4fa3-862e-eee90706362c",
                "sourceHandle": "default",
                "targetHandle": "default",
                "data": {
                    "outputType": "DataFrame"
                }
            },
            {
                "id": "EXTRACT_COLUMNS-4c6da2c7-4f06-4c0c-a452-84817df38733->SUPPORT_VECTOR_MACHINE-111df792-52d2-41ac-9662-1066da12d44b_b90584da-d982-48d3-afe4-a74f740eaacb",
                "source": "EXTRACT_COLUMNS-4c6da2c7-4f06-4c0c-a452-84817df38733",
                "target": "SUPPORT_VECTOR_MACHINE-111df792-52d2-41ac-9662-1066da12d44b",
                "sourceHandle": "default",
                "targetHandle": "train_feature",
                "data": {
                    "outputType": "DataFrame"
                }
            },
            {
                "id": "EXTRACT_COLUMNS-0545e012-b814-4fa3-862e-eee90706362c->SUPPORT_VECTOR_MACHINE-111df792-52d2-41ac-9662-1066da12d44b_ad355912-4cb3-40f2-9852-4313f46fe296",
                "source": "EXTRACT_COLUMNS-0545e012-b814-4fa3-862e-eee90706362c",
                "target": "SUPPORT_VECTOR_MACHINE-111df792-52d2-41ac-9662-1066da12d44b",
                "sourceHandle": "default",
                "targetHandle": "train_label",
                "data": {
                    "outputType": "DataFrame"
                }
            },
            {
                "id": "READ_CSV-b129bd06-805b-42c7-9329-c4e359b274e8->SUPPORT_VECTOR_MACHINE-111df792-52d2-41ac-9662-1066da12d44b_6f7b5602-37e2-41f9-9b42-c111b30bf207",
                "source": "READ_CSV-b129bd06-805b-42c7-9329-c4e359b274e8",
                "target": "SUPPORT_VECTOR_MACHINE-111df792-52d2-41ac-9662-1066da12d44b",
                "sourceHandle": "default",
                "targetHandle": "input_data",
                "data": {
                    "outputType": "DataFrame"
                }
            },
            {
                "id": "SUPPORT_VECTOR_MACHINE-111df792-52d2-41ac-9662-1066da12d44b->TABLE-659144a4-a348-4176-a5af-6072249ac807_b587975f-b822-41df-8eab-13d615e9f819",
                "source": "SUPPORT_VECTOR_MACHINE-111df792-52d2-41ac-9662-1066da12d44b",
                "target": "TABLE-659144a4-a348-4176-a5af-6072249ac807",
                "sourceHandle": "default",
                "targetHandle": "default",
                "data": {
                    "outputType": "DataFrame"
                }
            }
        ]
    },
    "textNodes": []
}