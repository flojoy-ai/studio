{
    "rfInstance": {
        "nodes": [
            {
                "width": 239,
                "height": 198,
                "id": "CONDITIONAL-2e79a304-2caf-4a37-b9f3-ea43da5c88db",
                "type": "CONDITIONALS",
                "data": {
                    "id": "CONDITIONAL-2e79a304-2caf-4a37-b9f3-ea43da5c88db",
                    "label": "CONDITIONAL",
                    "func": "CONDITIONAL",
                    "type": "CONDITIONALS",
                    "ctrls": {
                        "operator_type": {
                            "type": "select",
                            "default": ">=",
                            "options": [
                                "<=",
                                ">",
                                "<",
                                ">=",
                                "!=",
                                "=="
                            ],
                            "desc": "Specifies the type of comparison to be performed between the two inputs. The default value is \">=\".",
                            "functionName": "CONDITIONAL",
                            "param": "operator_type",
                            "value": "<=",
                            "overload": null
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "x",
                            "id": "x",
                            "type": "Scalar",
                            "desc": null,
                            "multiple": false
                        },
                        {
                            "name": "y",
                            "id": "y",
                            "type": "Scalar",
                            "desc": null,
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "true",
                            "id": "true",
                            "type": "Any",
                            "desc": "Forwards the first value to the true branch."
                        },
                        {
                            "name": "false",
                            "id": "false",
                            "type": "Any",
                            "desc": null
                        }
                    ],
                    "path": "CONTROL_FLOW/CONDITIONALS/CONDITIONAL/CONDITIONAL.py",
                    "selected": false
                },
                "position": {
                    "x": 575.5077614193522,
                    "y": 645.3884965154285
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 575.5077614193522,
                    "y": 645.3884965154285
                },
                "dragging": false
            },
            {
                "id": "LOOP-d3772cde-aea3-47d0-b006-8dc2f0e5f523",
                "type": "CONTROL_FLOW",
                "data": {
                    "id": "LOOP-d3772cde-aea3-47d0-b006-8dc2f0e5f523",
                    "label": "LOOP",
                    "func": "LOOP",
                    "type": "CONTROL_FLOW",
                    "ctrls": {
                        "num_loops": {
                            "type": "int",
                            "default": -1,
                            "desc": "number of times to iterate through body nodes, default is \"-1\" meaning infinity.",
                            "overload": null,
                            "functionName": "LOOP",
                            "param": "num_loops",
                            "value": -1
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": null,
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "body",
                            "id": "body",
                            "type": "Any",
                            "desc": "Forwards the input DataContainer to the body."
                        },
                        {
                            "name": "end",
                            "id": "end",
                            "type": "Any",
                            "desc": "Forwards the input DataContainer to the end."
                        }
                    ],
                    "path": "CONTROL_FLOW/LOOPS/LOOP/LOOP.py"
                },
                "position": {
                    "x": -1262.2386419179447,
                    "y": 669.6071487717925
                },
                "width": 236,
                "height": 198,
                "selected": false,
                "positionAbsolute": {
                    "x": -1262.2386419179447,
                    "y": 669.6071487717925
                },
                "dragging": false
            },
            {
                "id": "TEXT_VIEW-28549e80-202e-4094-97dc-33dd7d6c6a79",
                "type": "VISUALIZATION",
                "data": {
                    "id": "TEXT_VIEW-28549e80-202e-4094-97dc-33dd7d6c6a79",
                    "label": "TEXT VIEW",
                    "func": "TEXT_VIEW",
                    "type": "VISUALIZATION",
                    "ctrls": {
                        "prettify": {
                            "type": "bool",
                            "default": false,
                            "desc": "Whether to prettify the displayed text (defaults to True)",
                            "overload": null,
                            "functionName": "TEXT_VIEW",
                            "param": "prettify",
                            "value": false
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "String|Boolean",
                            "desc": "The DataContainer to be visualized in text format",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "String",
                            "desc": "The DataContainer containing text data"
                        }
                    ],
                    "path": "DATA/VISUALIZATION/DATA_STRUCTURE/TEXT_VIEW/TEXT_VIEW.py"
                },
                "position": {
                    "x": -456.8269629428951,
                    "y": 970.0977970576832
                },
                "width": 225,
                "height": 225,
                "selected": false,
                "positionAbsolute": {
                    "x": -456.8269629428951,
                    "y": 970.0977970576832
                },
                "dragging": false
            },
            {
                "id": "CONSTANT-919ab931-a2dc-4cd0-9241-97a89f0b8696",
                "type": "DATA",
                "data": {
                    "id": "CONSTANT-919ab931-a2dc-4cd0-9241-97a89f0b8696",
                    "label": "10",
                    "func": "CONSTANT",
                    "type": "DATA",
                    "ctrls": {
                        "dc_type": {
                            "type": "select",
                            "default": "OrderedPair",
                            "options": [
                                "Scalar",
                                "Vector",
                                "OrderedPair"
                            ],
                            "desc": "The type of DataContainer to return.",
                            "overload": null,
                            "functionName": "CONSTANT",
                            "param": "dc_type",
                            "value": "Scalar"
                        },
                        "constant": {
                            "type": "float",
                            "default": 3,
                            "desc": "The value of the y axis output.",
                            "overload": null,
                            "functionName": "CONSTANT",
                            "param": "constant",
                            "value": 10
                        },
                        "step": {
                            "type": "float",
                            "default": 1000,
                            "desc": "The size of the y and x axes.",
                            "overload": null,
                            "functionName": "CONSTANT",
                            "param": "step",
                            "value": 1
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Vector|OrderedPair",
                            "desc": "Optional input that defines the size of the output.",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "OrderedPair|Vector|Scalar",
                            "desc": "OrderedPair if selected\nx: the x axis generated with size 'step'\ny: the resulting constant with size 'step'\nVector if selected\nv: the resulting constant with size 'step'\nScalar if selected\nc: the resulting constant"
                        }
                    ],
                    "path": "DATA/GENERATION/SIMULATIONS/CONSTANT/CONSTANT.py"
                },
                "position": {
                    "x": 176.029094396461,
                    "y": 899.5584628421134
                },
                "width": 216,
                "height": 197,
                "selected": false,
                "dragging": false,
                "positionAbsolute": {
                    "x": 176.029094396461,
                    "y": 899.5584628421134
                }
            },
            {
                "id": "CONSTANT-9f1471c5-8914-4d11-aa70-3a06d51fca65",
                "type": "DATA",
                "data": {
                    "id": "CONSTANT-9f1471c5-8914-4d11-aa70-3a06d51fca65",
                    "label": "1",
                    "func": "CONSTANT",
                    "type": "DATA",
                    "ctrls": {
                        "dc_type": {
                            "type": "select",
                            "default": "OrderedPair",
                            "options": [
                                "Scalar",
                                "Vector",
                                "OrderedPair"
                            ],
                            "desc": "The type of DataContainer to return.",
                            "overload": null,
                            "functionName": "CONSTANT",
                            "param": "dc_type",
                            "value": "Scalar"
                        },
                        "constant": {
                            "type": "float",
                            "default": 3,
                            "desc": "The value of the y axis output.",
                            "overload": null,
                            "functionName": "CONSTANT",
                            "param": "constant",
                            "value": 1
                        },
                        "step": {
                            "type": "float",
                            "default": 1000,
                            "desc": "The size of the y and x axes.",
                            "overload": null,
                            "functionName": "CONSTANT",
                            "param": "step",
                            "value": 1
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Vector|OrderedPair",
                            "desc": "Optional input that defines the size of the output.",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "OrderedPair|Vector|Scalar",
                            "desc": "OrderedPair if selected\nx: the x axis generated with size 'step'\ny: the resulting constant with size 'step'\nVector if selected\nv: the resulting constant with size 'step'\nScalar if selected\nc: the resulting constant"
                        }
                    ],
                    "path": "DATA/GENERATION/SIMULATIONS/CONSTANT/CONSTANT.py"
                },
                "position": {
                    "x": -509.87434097438404,
                    "y": 416.5576457556896
                },
                "width": 216,
                "height": 197,
                "selected": false,
                "positionAbsolute": {
                    "x": -509.87434097438404,
                    "y": 416.5576457556896
                },
                "dragging": false
            },
            {
                "id": "CONSTANT-b3a928a3-7fc6-4544-97cc-335797eaeb0f",
                "type": "DATA",
                "data": {
                    "id": "CONSTANT-b3a928a3-7fc6-4544-97cc-335797eaeb0f",
                    "label": "1",
                    "func": "CONSTANT",
                    "type": "DATA",
                    "ctrls": {
                        "dc_type": {
                            "type": "select",
                            "default": "OrderedPair",
                            "options": [
                                "Scalar",
                                "Vector",
                                "OrderedPair"
                            ],
                            "desc": "The type of DataContainer to return.",
                            "overload": null,
                            "functionName": "CONSTANT",
                            "param": "dc_type",
                            "value": "Scalar"
                        },
                        "constant": {
                            "type": "float",
                            "default": 3,
                            "desc": "The value of the y axis output.",
                            "overload": null,
                            "functionName": "CONSTANT",
                            "param": "constant",
                            "value": 1
                        },
                        "step": {
                            "type": "float",
                            "default": 1000,
                            "desc": "The size of the y and x axes.",
                            "overload": null,
                            "functionName": "CONSTANT",
                            "param": "step",
                            "value": 1
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Vector|OrderedPair",
                            "desc": "Optional input that defines the size of the output.",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "OrderedPair|Vector|Scalar",
                            "desc": "OrderedPair if selected\nx: the x axis generated with size 'step'\ny: the resulting constant with size 'step'\nVector if selected\nv: the resulting constant with size 'step'\nScalar if selected\nc: the resulting constant"
                        }
                    ],
                    "path": "DATA/GENERATION/SIMULATIONS/CONSTANT/CONSTANT.py"
                },
                "position": {
                    "x": -690.5087470791844,
                    "y": 644.948681605912
                },
                "width": 216,
                "height": 197,
                "selected": false,
                "positionAbsolute": {
                    "x": -690.5087470791844,
                    "y": 644.948681605912
                },
                "dragging": false
            },
            {
                "id": "TEXT-41baeb7b-78bf-4c8e-aa07-07743e1f0828",
                "type": "DATA",
                "data": {
                    "id": "TEXT-41baeb7b-78bf-4c8e-aa07-07743e1f0828",
                    "label": "TEXT",
                    "func": "TEXT",
                    "type": "DATA",
                    "ctrls": {
                        "value": {
                            "type": "TextArea",
                            "default": "Hello World!",
                            "desc": "The value set in Parameters.",
                            "overload": null,
                            "functionName": "TEXT",
                            "param": "value",
                            "value": "Hello World!"
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "_",
                            "id": "_",
                            "type": "Any",
                            "desc": null,
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "String",
                            "desc": "Return the value being set in Parameters."
                        }
                    ],
                    "path": "DATA/GENERATION/SIMULATIONS/TEXT/TEXT.py"
                },
                "position": {
                    "x": -928.2672376653068,
                    "y": 1007.9940925370173
                },
                "width": 216,
                "height": 197,
                "selected": false,
                "positionAbsolute": {
                    "x": -928.2672376653068,
                    "y": 1007.9940925370173
                },
                "dragging": false
            },
            {
                "id": "FEEDBACK-35543e6c-af83-47a4-850f-06730d1ac8f3",
                "type": "DATA",
                "data": {
                    "id": "FEEDBACK-35543e6c-af83-47a4-850f-06730d1ac8f3",
                    "label": "FEEDBACK",
                    "func": "FEEDBACK",
                    "type": "DATA",
                    "ctrls": {
                        "referred_node": {
                            "type": "NodeReference",
                            "default": null,
                            "desc": "The node ID to capture the result from.",
                            "overload": null,
                            "functionName": "FEEDBACK",
                            "param": "referred_node",
                            "value": "ADD-f5a6b3c5-244e-4353-8e54-f8a96095872f"
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": null,
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": "The result of the specified node ID, or the result of the parent node if it was not found."
                        }
                    ],
                    "path": "DATA/GENERATION/SIMULATIONS/FEEDBACK/FEEDBACK.py"
                },
                "position": {
                    "x": -320.8638658064917,
                    "y": 646.246921532964
                },
                "width": 216,
                "height": 197,
                "selected": false,
                "dragging": false,
                "positionAbsolute": {
                    "x": -320.8638658064917,
                    "y": 646.246921532964
                }
            },
            {
                "id": "ADD-f5a6b3c5-244e-4353-8e54-f8a96095872f",
                "type": "MATH",
                "data": {
                    "id": "ADD-f5a6b3c5-244e-4353-8e54-f8a96095872f",
                    "label": "ADD",
                    "func": "ADD",
                    "type": "MATH",
                    "ctrls": {},
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "a",
                            "id": "a",
                            "type": "OrderedPair|Scalar|Vector",
                            "desc": "The input a use to compute the sum of a and b.",
                            "multiple": false
                        },
                        {
                            "name": "b",
                            "id": "b",
                            "type": "OrderedPair|Scalar|Vector",
                            "desc": "The input b use to compute the sum of a and b.",
                            "multiple": true
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "OrderedPair|Scalar|Vector",
                            "desc": "OrderedPair if a is an OrderedPair.\nx: the x-axis of input a.\ny: the sum of input a and input b.\n\nScalar if a is a Scalar.\nc: the sum of input a and input b.\n\nVector if a is a Vector.\nv: the sum of input a and input b."
                        }
                    ],
                    "path": "MATH/ARITHMETIC/ADD/ADD.py"
                },
                "position": {
                    "x": 181.04824238064043,
                    "y": 615.7990746884287
                },
                "width": 216,
                "height": 198,
                "selected": false,
                "positionAbsolute": {
                    "x": 181.04824238064043,
                    "y": 615.7990746884287
                },
                "dragging": false
            },
            {
                "id": "FEEDBACK-ddeda7bd-e6c3-4f9d-8a1b-ae3ffe328c8e",
                "type": "DATA",
                "data": {
                    "id": "FEEDBACK-ddeda7bd-e6c3-4f9d-8a1b-ae3ffe328c8e",
                    "label": "FEEDBACK 1",
                    "func": "FEEDBACK",
                    "type": "DATA",
                    "ctrls": {
                        "referred_node": {
                            "type": "NodeReference",
                            "default": null,
                            "desc": "The node ID to capture the result from.",
                            "overload": null,
                            "functionName": "FEEDBACK",
                            "param": "referred_node",
                            "value": "ADD-f5a6b3c5-244e-4353-8e54-f8a96095872f"
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": null,
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": "The result of the specified node ID, or the result of the parent node if it was not found."
                        }
                    ],
                    "path": "DATA/GENERATION/SIMULATIONS/FEEDBACK/FEEDBACK.py"
                },
                "position": {
                    "x": 766.2176036936438,
                    "y": 389.60635172152683
                },
                "width": 216,
                "height": 197,
                "selected": false,
                "positionAbsolute": {
                    "x": 766.2176036936438,
                    "y": 389.60635172152683
                },
                "dragging": false
            },
            {
                "id": "BIG_NUMBER-234147a4-764b-49d4-9ff2-096fbb1d2e0e",
                "type": "VISUALIZATION",
                "data": {
                    "id": "BIG_NUMBER-234147a4-764b-49d4-9ff2-096fbb1d2e0e",
                    "label": "BIG NUMBER",
                    "func": "BIG_NUMBER",
                    "type": "VISUALIZATION",
                    "ctrls": {
                        "suffix": {
                            "type": "str",
                            "default": null,
                            "desc": "any suffix to show with big number",
                            "overload": null,
                            "functionName": "BIG_NUMBER",
                            "param": "suffix",
                            "value": ""
                        },
                        "prefix": {
                            "type": "str",
                            "default": null,
                            "desc": "any prefix to show with big number",
                            "overload": null,
                            "functionName": "BIG_NUMBER",
                            "param": "prefix",
                            "value": ""
                        },
                        "title": {
                            "type": "str",
                            "default": null,
                            "desc": "title of the plot, default = \"BIG_NUMBER\"",
                            "overload": null,
                            "functionName": "BIG_NUMBER",
                            "param": "title",
                            "value": ""
                        },
                        "dec_places": {
                            "type": "int",
                            "default": 0,
                            "desc": "Number of decimal places. Use 0 to not round. default = \"BIG_NUMBER\"",
                            "overload": null,
                            "functionName": "BIG_NUMBER",
                            "param": "dec_places",
                            "value": 0
                        },
                        "relative_delta": {
                            "type": "bool",
                            "default": true,
                            "desc": "whether or not to show the relative delta from the last run along with big number",
                            "overload": null,
                            "functionName": "BIG_NUMBER",
                            "param": "relative_delta",
                            "value": true
                        },
                        "scientific_notation": {
                            "type": "bool",
                            "default": false,
                            "desc": "Use scientific notation? Defaults to 4 decimal places.",
                            "overload": null,
                            "functionName": "BIG_NUMBER",
                            "param": "scientific_notation",
                            "value": false
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "OrderedPair|Scalar|Vector",
                            "desc": "the DataContainer to be visualized",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Plotly",
                            "desc": "the DataContainer containing the Plotly big number visualization"
                        }
                    ],
                    "path": "DATA/VISUALIZATION/PLOTLY/BIG_NUMBER/BIG_NUMBER.py"
                },
                "position": {
                    "x": 1182.0826579885684,
                    "y": 359.0566770211817
                },
                "width": 225,
                "height": 225,
                "selected": false,
                "positionAbsolute": {
                    "x": 1182.0826579885684,
                    "y": 359.0566770211817
                },
                "dragging": false
            },
            {
                "id": "BREAK-e32b70ce-30ab-4788-9fc5-4b356a01cec5",
                "type": "CONTROL_FLOW",
                "data": {
                    "id": "BREAK-e32b70ce-30ab-4788-9fc5-4b356a01cec5",
                    "label": "BREAK",
                    "func": "BREAK",
                    "type": "CONTROL_FLOW",
                    "ctrls": {
                        "referred_node": {
                            "type": "NodeReference",
                            "default": null,
                            "desc": "This is the specific instance of a LOOP node that you want to break.\nIt is required to differentiate between multiple LOOPs if they exist\nin the same application.",
                            "overload": null,
                            "functionName": "BREAK",
                            "param": "referred_node",
                            "value": "LOOP-d3772cde-aea3-47d0-b006-8dc2f0e5f523"
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": "This node simply requires an input (most likely from\nthe return of a CONDITIONAL node) so that it is executed.",
                            "multiple": false
                        }
                    ],
                    "path": "CONTROL_FLOW/LOOP_TOOLS/BREAK/BREAK.py"
                },
                "position": {
                    "x": 917.5837898780014,
                    "y": 704.5380797583803
                },
                "width": 236,
                "height": 140,
                "selected": false,
                "positionAbsolute": {
                    "x": 917.5837898780014,
                    "y": 704.5380797583803
                },
                "dragging": false
            }
        ],
        "edges": [
            {
                "id": "LOOP-d3772cde-aea3-47d0-b006-8dc2f0e5f523->TEXT-41baeb7b-78bf-4c8e-aa07-07743e1f0828_291ea27f-66dd-4571-bcd5-a8771fe9fe00",
                "source": "LOOP-d3772cde-aea3-47d0-b006-8dc2f0e5f523",
                "target": "TEXT-41baeb7b-78bf-4c8e-aa07-07743e1f0828",
                "sourceHandle": "end",
                "targetHandle": "_",
                "data": {
                    "outputType": "Any"
                }
            },
            {
                "id": "TEXT-41baeb7b-78bf-4c8e-aa07-07743e1f0828->TEXT_VIEW-28549e80-202e-4094-97dc-33dd7d6c6a79_cf0c5c1f-8d10-4e07-a2dc-a3ca0b764f19",
                "source": "TEXT-41baeb7b-78bf-4c8e-aa07-07743e1f0828",
                "target": "TEXT_VIEW-28549e80-202e-4094-97dc-33dd7d6c6a79",
                "sourceHandle": "default",
                "targetHandle": "default",
                "data": {
                    "outputType": "String"
                }
            },
            {
                "id": "CONSTANT-b3a928a3-7fc6-4544-97cc-335797eaeb0f->FEEDBACK-35543e6c-af83-47a4-850f-06730d1ac8f3_8af32ad8-64df-459e-b53b-590b9ecc1ba9",
                "source": "CONSTANT-b3a928a3-7fc6-4544-97cc-335797eaeb0f",
                "target": "FEEDBACK-35543e6c-af83-47a4-850f-06730d1ac8f3",
                "sourceHandle": "default",
                "targetHandle": "default",
                "data": {
                    "outputType": "OrderedPair"
                }
            },
            {
                "id": "FEEDBACK-35543e6c-af83-47a4-850f-06730d1ac8f3->ADD-f5a6b3c5-244e-4353-8e54-f8a96095872f_734aa597-383a-46df-a42f-ea1b7a3318a7",
                "source": "FEEDBACK-35543e6c-af83-47a4-850f-06730d1ac8f3",
                "target": "ADD-f5a6b3c5-244e-4353-8e54-f8a96095872f",
                "sourceHandle": "default",
                "targetHandle": "b",
                "data": {
                    "outputType": "Any"
                }
            },
            {
                "id": "CONSTANT-919ab931-a2dc-4cd0-9241-97a89f0b8696->CONDITIONAL-2e79a304-2caf-4a37-b9f3-ea43da5c88db_30c90a08-307f-4185-af89-b835fd922489",
                "source": "CONSTANT-919ab931-a2dc-4cd0-9241-97a89f0b8696",
                "target": "CONDITIONAL-2e79a304-2caf-4a37-b9f3-ea43da5c88db",
                "sourceHandle": "default",
                "targetHandle": "y",
                "data": {
                    "outputType": "OrderedPair"
                }
            },
            {
                "id": "CONDITIONAL-2e79a304-2caf-4a37-b9f3-ea43da5c88db->FEEDBACK-ddeda7bd-e6c3-4f9d-8a1b-ae3ffe328c8e_4c51b5a0-04d9-45dc-ac67-88ec92a3bcbd",
                "source": "CONDITIONAL-2e79a304-2caf-4a37-b9f3-ea43da5c88db",
                "target": "FEEDBACK-ddeda7bd-e6c3-4f9d-8a1b-ae3ffe328c8e",
                "sourceHandle": "true",
                "targetHandle": "default",
                "data": {
                    "outputType": "Any"
                }
            },
            {
                "id": "FEEDBACK-ddeda7bd-e6c3-4f9d-8a1b-ae3ffe328c8e->BIG_NUMBER-234147a4-764b-49d4-9ff2-096fbb1d2e0e_4538e5d5-a3e2-49a4-8f08-1dc58b0ae504",
                "source": "FEEDBACK-ddeda7bd-e6c3-4f9d-8a1b-ae3ffe328c8e",
                "target": "BIG_NUMBER-234147a4-764b-49d4-9ff2-096fbb1d2e0e",
                "sourceHandle": "default",
                "targetHandle": "default",
                "data": {
                    "outputType": "Any"
                }
            },
            {
                "id": "CONDITIONAL-2e79a304-2caf-4a37-b9f3-ea43da5c88db->BREAK-e32b70ce-30ab-4788-9fc5-4b356a01cec5_7da86cf0-3abe-46a3-80b1-5f6ef631b64a",
                "source": "CONDITIONAL-2e79a304-2caf-4a37-b9f3-ea43da5c88db",
                "target": "BREAK-e32b70ce-30ab-4788-9fc5-4b356a01cec5",
                "sourceHandle": "false",
                "targetHandle": "default",
                "data": {
                    "outputType": "Any"
                }
            },
            {
                "id": "CONSTANT-9f1471c5-8914-4d11-aa70-3a06d51fca65->ADD-f5a6b3c5-244e-4353-8e54-f8a96095872f_867ae19d-8a0b-4aa2-b6d7-2d32ee0ec920",
                "source": "CONSTANT-9f1471c5-8914-4d11-aa70-3a06d51fca65",
                "target": "ADD-f5a6b3c5-244e-4353-8e54-f8a96095872f",
                "sourceHandle": "default",
                "targetHandle": "a",
                "data": {
                    "outputType": "OrderedPair"
                }
            },
            {
                "id": "ADD-f5a6b3c5-244e-4353-8e54-f8a96095872f->CONDITIONAL-2e79a304-2caf-4a37-b9f3-ea43da5c88db_0f3acd39-22ba-4baa-8d12-2856db0fe05b",
                "source": "ADD-f5a6b3c5-244e-4353-8e54-f8a96095872f",
                "target": "CONDITIONAL-2e79a304-2caf-4a37-b9f3-ea43da5c88db",
                "sourceHandle": "default",
                "targetHandle": "x",
                "data": {
                    "outputType": "OrderedPair"
                }
            },
            {
                "id": "LOOP-d3772cde-aea3-47d0-b006-8dc2f0e5f523->CONSTANT-b3a928a3-7fc6-4544-97cc-335797eaeb0f_e60ce9a9-6c43-4851-9df6-d1b8d59ca0b6",
                "source": "LOOP-d3772cde-aea3-47d0-b006-8dc2f0e5f523",
                "target": "CONSTANT-b3a928a3-7fc6-4544-97cc-335797eaeb0f",
                "sourceHandle": "body",
                "targetHandle": "default",
                "data": {
                    "outputType": "Any"
                }
            },
            {
                "id": "LOOP-d3772cde-aea3-47d0-b006-8dc2f0e5f523->CONSTANT-9f1471c5-8914-4d11-aa70-3a06d51fca65_43531874-7546-41f6-b756-799baaa1b0db",
                "source": "LOOP-d3772cde-aea3-47d0-b006-8dc2f0e5f523",
                "target": "CONSTANT-9f1471c5-8914-4d11-aa70-3a06d51fca65",
                "sourceHandle": "body",
                "targetHandle": "default",
                "data": {
                    "outputType": "Any"
                }
            }
        ]
    },
    "textNodes": []
}