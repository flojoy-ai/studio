{
    "rfInstance": {
        "nodes": [
            {
                "width": 150,
                "height": 174,
                "id": "EXTREMA_DETERMINATION-601e08c6-42d6-4b85-aa87-5e8ea4d4abb5",
                "type": "VISUALIZATION",
                "data": {
                    "id": "EXTREMA_DETERMINATION-601e08c6-42d6-4b85-aa87-5e8ea4d4abb5",
                    "label": "LoG PEAK FINDER",
                    "func": "EXTREMA_DETERMINATION",
                    "type": "VISUALIZATION",
                    "ctrls": {
                        "center": {
                            "type": "list[int]",
                            "default": null,
                            "desc": "For the high symmetry algorithm, this provides the center of symmetry\nto pass to the cross correlation routines.\nIf none is provided, an autocenter routine is run to attempt to find the center of symmetry.",
                            "functionName": "EXTREMA_DETERMINATION",
                            "param": "center",
                            "value": "",
                            "overload": null
                        },
                        "min_dist": {
                            "type": "float",
                            "default": 0,
                            "desc": "The minimum distance between peaks.\nIf the L2 distance (in pixels) of any pair of peaks is less than min_dist,\nthey are considered to be the same, and one is discarded.\nThis parameter applies to all algorithms.",
                            "functionName": "EXTREMA_DETERMINATION",
                            "param": "min_dist",
                            "value": 0,
                            "overload": null
                        },
                        "algorithm": {
                            "type": "select",
                            "default": "log",
                            "options": [
                                "persistence",
                                "high_symmetry",
                                "log"
                            ],
                            "desc": "The name of the algorithm to use.",
                            "functionName": "EXTREMA_DETERMINATION",
                            "param": "algorithm",
                            "value": "log",
                            "overload": null
                        },
                        "prominence": {
                            "type": "float",
                            "default": 0,
                            "desc": "In the prominence and Laplacian of Gaussian algorithms, this defines the threshold\nabove or below which objects must pass in order to be considered a peak.\nDoes not apply to the high_symmetry algorithm.",
                            "functionName": "EXTREMA_DETERMINATION",
                            "param": "prominence",
                            "value": "0.1",
                            "overload": null
                        },
                        "k": {
                            "type": "float",
                            "default": 1.41,
                            "desc": "This specifies the scaling of Gaussian filters between successive applications\nof Gaussian filters of increasing sigma.\nDefault is chosen for ideal spherically symmetric peaks.\nCan be tuned for more bizarre looking peak structures.\nApplies only to the Laplacian of Gaussian algorithm.",
                            "functionName": "EXTREMA_DETERMINATION",
                            "param": "k",
                            "value": 1.41,
                            "overload": null
                        },
                        "sigma": {
                            "type": "float",
                            "default": 1,
                            "desc": "The baseline standard deviation of the Gaussian filters,\nonly for the Laplacian of Gaussian algorithm.",
                            "functionName": "EXTREMA_DETERMINATION",
                            "param": "sigma",
                            "value": 1,
                            "overload": null
                        },
                        "max_power": {
                            "type": "int",
                            "default": 9,
                            "desc": "Describes the upper limit of the degree of exponentiation for the successive\napplication of filters, only in the Laplacian of Gaussian algorithm.",
                            "functionName": "EXTREMA_DETERMINATION",
                            "param": "max_power",
                            "value": 9,
                            "overload": null
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Image|Grayscale|Matrix",
                            "desc": "The input DataContainer that contains the image to be processed.\nCan either be RGBA, greyscale, or a matrix type.\nIn the case of RGB(A), the image is flattened to grayscale for the peak detection.",
                            "multiple": false
                        },
                        {
                            "name": "image_mask",
                            "id": "image_mask",
                            "type": "Grayscale|Matrix",
                            "desc": "This object provides a mask to apply to the peak finding routines.\nPeaks found by any algorithm inside this mask are ignored.\nShould be of a datatype that can be static cast to booleans.\nIf none, it is assumed that the entire image is valid for peak detection.",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "fig",
                            "id": "fig",
                            "type": "Plotly",
                            "desc": "The Plotly figure so that the image can be visualized with its found peaks."
                        },
                        {
                            "name": "blobs",
                            "id": "blobs",
                            "type": "Grayscale",
                            "desc": "A blob mask that returns the regions around the found peaks.\nIt is only valid for the high_symmetry and log routines.\nAs the persistence algorithm is by definition hyperlocal, it has no notion of blobs\nthroughout the detection process, and as such returns a unity mask."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "scikit-image",
                            "v": "0.21.0"
                        }
                    ],
                    "path": "COMPUTER_VISION/EXTREMA_DETERMINATION/EXTREMA_DETERMINATION.py",
                    "selected": false
                },
                "position": {
                    "x": 173.65257646934958,
                    "y": 302.16518590802207
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 173.65257646934958,
                    "y": 302.16518590802207
                },
                "dragging": false
            },
            {
                "width": 150,
                "height": 174,
                "id": "EXTREMA_DETERMINATION-044a2e60-2992-456e-807d-27a973df9925",
                "type": "VISUALIZATION",
                "data": {
                    "id": "EXTREMA_DETERMINATION-044a2e60-2992-456e-807d-27a973df9925",
                    "label": "LDR PEAK FINDER",
                    "func": "EXTREMA_DETERMINATION",
                    "type": "VISUALIZATION",
                    "ctrls": {
                        "center": {
                            "type": "list[int]",
                            "default": null,
                            "desc": "For the high symmetry algorithm, this provides the center of symmetry\nto pass to the cross correlation routines.\nIf none is provided, an autocenter routine is run to attempt to find the center of symmetry.",
                            "functionName": "EXTREMA_DETERMINATION",
                            "param": "center",
                            "value": "125,125",
                            "overload": null
                        },
                        "min_dist": {
                            "type": "float",
                            "default": 0,
                            "desc": "The minimum distance between peaks.\nIf the L2 distance (in pixels) of any pair of peaks is less than min_dist,\nthey are considered to be the same, and one is discarded.\nThis parameter applies to all algorithms.",
                            "functionName": "EXTREMA_DETERMINATION",
                            "param": "min_dist",
                            "value": 0,
                            "overload": null
                        },
                        "algorithm": {
                            "type": "select",
                            "default": "log",
                            "options": [
                                "persistence",
                                "high_symmetry",
                                "log"
                            ],
                            "desc": "The name of the algorithm to use.",
                            "functionName": "EXTREMA_DETERMINATION",
                            "param": "algorithm",
                            "value": "high_symmetry",
                            "overload": null
                        },
                        "prominence": {
                            "type": "float",
                            "default": 0,
                            "desc": "In the prominence and Laplacian of Gaussian algorithms, this defines the threshold\nabove or below which objects must pass in order to be considered a peak.\nDoes not apply to the high_symmetry algorithm.",
                            "functionName": "EXTREMA_DETERMINATION",
                            "param": "prominence",
                            "value": 0,
                            "overload": null
                        },
                        "k": {
                            "type": "float",
                            "default": 1.41,
                            "desc": "This specifies the scaling of Gaussian filters between successive applications\nof Gaussian filters of increasing sigma.\nDefault is chosen for ideal spherically symmetric peaks.\nCan be tuned for more bizarre looking peak structures.\nApplies only to the Laplacian of Gaussian algorithm.",
                            "functionName": "EXTREMA_DETERMINATION",
                            "param": "k",
                            "value": 1.41,
                            "overload": null
                        },
                        "sigma": {
                            "type": "float",
                            "default": 1,
                            "desc": "The baseline standard deviation of the Gaussian filters,\nonly for the Laplacian of Gaussian algorithm.",
                            "functionName": "EXTREMA_DETERMINATION",
                            "param": "sigma",
                            "value": 1,
                            "overload": null
                        },
                        "max_power": {
                            "type": "int",
                            "default": 9,
                            "desc": "Describes the upper limit of the degree of exponentiation for the successive\napplication of filters, only in the Laplacian of Gaussian algorithm.",
                            "functionName": "EXTREMA_DETERMINATION",
                            "param": "max_power",
                            "value": 9,
                            "overload": null
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Image|Grayscale|Matrix",
                            "desc": "The input DataContainer that contains the image to be processed.\nCan either be RGBA, greyscale, or a matrix type.\nIn the case of RGB(A), the image is flattened to grayscale for the peak detection.",
                            "multiple": false
                        },
                        {
                            "name": "image_mask",
                            "id": "image_mask",
                            "type": "Grayscale|Matrix",
                            "desc": "This object provides a mask to apply to the peak finding routines.\nPeaks found by any algorithm inside this mask are ignored.\nShould be of a datatype that can be static cast to booleans.\nIf none, it is assumed that the entire image is valid for peak detection.",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "fig",
                            "id": "fig",
                            "type": "Plotly",
                            "desc": "The Plotly figure so that the image can be visualized with its found peaks."
                        },
                        {
                            "name": "blobs",
                            "id": "blobs",
                            "type": "Grayscale",
                            "desc": "A blob mask that returns the regions around the found peaks.\nIt is only valid for the high_symmetry and log routines.\nAs the persistence algorithm is by definition hyperlocal, it has no notion of blobs\nthroughout the detection process, and as such returns a unity mask."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "scikit-image",
                            "v": "0.21.0"
                        }
                    ],
                    "path": "COMPUTER_VISION/EXTREMA_DETERMINATION/EXTREMA_DETERMINATION.py",
                    "selected": false
                },
                "position": {
                    "x": -763.0148109770004,
                    "y": -305.25396574770286
                },
                "selected": false,
                "positionAbsolute": {
                    "x": -763.0148109770004,
                    "y": -305.25396574770286
                },
                "dragging": false
            },
            {
                "width": 150,
                "height": 156,
                "id": "REGION_PROPERTIES-5d3e79fd-90cb-49a9-8cad-30468d046ec8",
                "type": "VISUALIZATION",
                "data": {
                    "id": "REGION_PROPERTIES-5d3e79fd-90cb-49a9-8cad-30468d046ec8",
                    "label": "REGION PROPERTIES 1",
                    "func": "REGION_PROPERTIES",
                    "type": "VISUALIZATION",
                    "ctrls": {},
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Image|Grayscale|Matrix",
                            "desc": "The input node to this function.\nIf nothing is supplied, a demo test case is returned to illustrate the functionality of this node.",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Plotly",
                            "desc": "A Plotly figure containing the illustrated features as determined by this node."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "scikit-image",
                            "v": "0.21.0"
                        }
                    ],
                    "path": "COMPUTER_VISION/REGION_PROPERTIES/REGION_PROPERTIES.py",
                    "selected": false
                },
                "position": {
                    "x": 731.1791076117513,
                    "y": 334.4051277948064
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 731.1791076117513,
                    "y": 334.4051277948064
                },
                "dragging": false
            },
            {
                "width": 150,
                "height": 156,
                "id": "REGION_PROPERTIES-373847d3-c96e-4c79-a80e-8d6d1f551945",
                "type": "VISUALIZATION",
                "data": {
                    "id": "REGION_PROPERTIES-373847d3-c96e-4c79-a80e-8d6d1f551945",
                    "label": "REGION PROPERTIES 2",
                    "func": "REGION_PROPERTIES",
                    "type": "VISUALIZATION",
                    "ctrls": {},
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Image|Grayscale|Matrix",
                            "desc": "The input node to this function.\nIf nothing is supplied, a demo test case is returned to illustrate the functionality of this node.",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Plotly",
                            "desc": "A Plotly figure containing the illustrated features as determined by this node."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "scikit-image",
                            "v": "0.21.0"
                        }
                    ],
                    "path": "COMPUTER_VISION/REGION_PROPERTIES/REGION_PROPERTIES.py",
                    "selected": false
                },
                "position": {
                    "x": 1194.9133403687424,
                    "y": -339.388490443667
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 1194.9133403687424,
                    "y": -339.388490443667
                },
                "dragging": false
            },
            {
                "width": 150,
                "height": 156,
                "id": "REGION_PROPERTIES-bd45eb65-94ef-4d5b-a822-ca6653fe7988",
                "type": "VISUALIZATION",
                "data": {
                    "id": "REGION_PROPERTIES-bd45eb65-94ef-4d5b-a822-ca6653fe7988",
                    "label": "REGION PROPERTIES 3",
                    "func": "REGION_PROPERTIES",
                    "type": "VISUALIZATION",
                    "ctrls": {},
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Image|Grayscale|Matrix",
                            "desc": "The input node to this function.\nIf nothing is supplied, a demo test case is returned to illustrate the functionality of this node.",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Plotly",
                            "desc": "A Plotly figure containing the illustrated features as determined by this node."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "scikit-image",
                            "v": "0.21.0"
                        }
                    ],
                    "path": "COMPUTER_VISION/REGION_PROPERTIES/REGION_PROPERTIES.py",
                    "selected": false
                },
                "position": {
                    "x": -258.8832667982938,
                    "y": -577.608055300374
                },
                "selected": false,
                "positionAbsolute": {
                    "x": -258.8832667982938,
                    "y": -577.608055300374
                },
                "dragging": false
            },
            {
                "width": 150,
                "height": 174,
                "id": "EXTREMA_DETERMINATION-31c62e4e-d139-421c-aa63-7029a27dd453",
                "type": "VISUALIZATION",
                "data": {
                    "id": "EXTREMA_DETERMINATION-31c62e4e-d139-421c-aa63-7029a27dd453",
                    "label": "HDR PEAK FINDER",
                    "func": "EXTREMA_DETERMINATION",
                    "type": "VISUALIZATION",
                    "ctrls": {
                        "center": {
                            "type": "list[int]",
                            "default": null,
                            "desc": "For the high symmetry algorithm, this provides the center of symmetry\nto pass to the cross correlation routines.\nIf none is provided, an autocenter routine is run to attempt to find the center of symmetry.",
                            "functionName": "EXTREMA_DETERMINATION",
                            "param": "center",
                            "value": "",
                            "overload": null
                        },
                        "min_dist": {
                            "type": "float",
                            "default": 0,
                            "desc": "The minimum distance between peaks.\nIf the L2 distance (in pixels) of any pair of peaks is less than min_dist,\nthey are considered to be the same, and one is discarded.\nThis parameter applies to all algorithms.",
                            "functionName": "EXTREMA_DETERMINATION",
                            "param": "min_dist",
                            "value": 0,
                            "overload": null
                        },
                        "algorithm": {
                            "type": "select",
                            "default": "log",
                            "options": [
                                "persistence",
                                "high_symmetry",
                                "log"
                            ],
                            "desc": "The name of the algorithm to use.",
                            "functionName": "EXTREMA_DETERMINATION",
                            "param": "algorithm",
                            "value": "persistence",
                            "overload": null
                        },
                        "prominence": {
                            "type": "float",
                            "default": 0,
                            "desc": "In the prominence and Laplacian of Gaussian algorithms, this defines the threshold\nabove or below which objects must pass in order to be considered a peak.\nDoes not apply to the high_symmetry algorithm.",
                            "functionName": "EXTREMA_DETERMINATION",
                            "param": "prominence",
                            "value": "0.1",
                            "overload": null
                        },
                        "k": {
                            "type": "float",
                            "default": 1.41,
                            "desc": "This specifies the scaling of Gaussian filters between successive applications\nof Gaussian filters of increasing sigma.\nDefault is chosen for ideal spherically symmetric peaks.\nCan be tuned for more bizarre looking peak structures.\nApplies only to the Laplacian of Gaussian algorithm.",
                            "functionName": "EXTREMA_DETERMINATION",
                            "param": "k",
                            "value": 1.41,
                            "overload": null
                        },
                        "sigma": {
                            "type": "float",
                            "default": 1,
                            "desc": "The baseline standard deviation of the Gaussian filters,\nonly for the Laplacian of Gaussian algorithm.",
                            "functionName": "EXTREMA_DETERMINATION",
                            "param": "sigma",
                            "value": 1,
                            "overload": null
                        },
                        "max_power": {
                            "type": "int",
                            "default": 9,
                            "desc": "Describes the upper limit of the degree of exponentiation for the successive\napplication of filters, only in the Laplacian of Gaussian algorithm.",
                            "functionName": "EXTREMA_DETERMINATION",
                            "param": "max_power",
                            "value": 9,
                            "overload": null
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Image|Grayscale|Matrix",
                            "desc": "The input DataContainer that contains the image to be processed.\nCan either be RGBA, greyscale, or a matrix type.\nIn the case of RGB(A), the image is flattened to grayscale for the peak detection.",
                            "multiple": false
                        },
                        {
                            "name": "image_mask",
                            "id": "image_mask",
                            "type": "Grayscale|Matrix",
                            "desc": "This object provides a mask to apply to the peak finding routines.\nPeaks found by any algorithm inside this mask are ignored.\nShould be of a datatype that can be static cast to booleans.\nIf none, it is assumed that the entire image is valid for peak detection.",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "fig",
                            "id": "fig",
                            "type": "Plotly",
                            "desc": "The Plotly figure so that the image can be visualized with its found peaks."
                        },
                        {
                            "name": "blobs",
                            "id": "blobs",
                            "type": "Grayscale",
                            "desc": "A blob mask that returns the regions around the found peaks.\nIt is only valid for the high_symmetry and log routines.\nAs the persistence algorithm is by definition hyperlocal, it has no notion of blobs\nthroughout the detection process, and as such returns a unity mask."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "scikit-image",
                            "v": "0.21.0"
                        }
                    ],
                    "path": "COMPUTER_VISION/EXTREMA_DETERMINATION/EXTREMA_DETERMINATION.py",
                    "selected": false
                },
                "position": {
                    "x": 597.5869261451514,
                    "y": -371.9553941455995
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 597.5869261451514,
                    "y": -371.9553941455995
                },
                "dragging": false
            },
            {
                "id": "LOCAL_FILE-e7481241-5ed9-4816-b30c-6dacd31c8d97",
                "type": "LOAD",
                "data": {
                    "id": "LOCAL_FILE-e7481241-5ed9-4816-b30c-6dacd31c8d97",
                    "label": "PNG LOADER",
                    "func": "LOCAL_FILE",
                    "type": "LOAD",
                    "ctrls": {
                        "file_path": {
                            "type": "str",
                            "default": null,
                            "desc": "The path to the file to be loaded. This can be either an absolute path or\na path relative to the \"nodes\" directory.",
                            "overload": null,
                            "functionName": "LOCAL_FILE",
                            "param": "file_path",
                            "value": "COMPUTER_VISION/EXTREMA_DETERMINATION/assets/lowrange.png"
                        },
                        "file_type": {
                            "type": "select",
                            "default": "Image",
                            "options": [
                                "Image",
                                "Grayscale",
                                "JSON",
                                "CSV"
                            ],
                            "desc": "Type of file to load, default = image.\nIf both 'file_path' and 'default' are not specified when 'file_type=\"Image\"',\na default image will be loaded.\nIf the file path is not specified and the default input is not connected,\na ValueError is raised.",
                            "overload": null,
                            "functionName": "LOCAL_FILE",
                            "param": "file_type",
                            "value": "Image"
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "String",
                            "desc": "If this input node is connected, the file name will be taken from\nthe output of the connected node.\nTo be used in conjunction with batch processing.",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Image|DataFrame|Grayscale",
                            "desc": "Image for file_type 'image'.\nGrayscale from file_type 'Grayscale'.\nDataFrame for file_type 'json', 'csv'."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "scikit-image",
                            "v": "0.21.0"
                        }
                    ],
                    "path": "ETL/LOAD/LOCAL_FILE_SYSTEM/LOCAL_FILE/LOCAL_FILE.py"
                },
                "position": {
                    "x": -1149.868634417404,
                    "y": -313.2155847209874
                },
                "width": 216,
                "height": 188,
                "selected": false,
                "positionAbsolute": {
                    "x": -1149.868634417404,
                    "y": -313.2155847209874
                },
                "dragging": false
            },
            {
                "id": "LOCAL_FILE-179e7f3b-34d2-434b-a797-58eace9c9208",
                "type": "LOAD",
                "data": {
                    "id": "LOCAL_FILE-179e7f3b-34d2-434b-a797-58eace9c9208",
                    "label": "LOCAL FILE 1",
                    "func": "LOCAL_FILE",
                    "type": "LOAD",
                    "ctrls": {
                        "file_path": {
                            "type": "str",
                            "default": null,
                            "desc": "The path to the file to be loaded. This can be either an absolute path or\na path relative to the \"nodes\" directory.",
                            "overload": null,
                            "functionName": "LOCAL_FILE",
                            "param": "file_path",
                            "value": "COMPUTER_VISION/EXTREMA_DETERMINATION/assets/hubble_deep_field.tif"
                        },
                        "file_type": {
                            "type": "select",
                            "default": "Image",
                            "options": [
                                "Image",
                                "Grayscale",
                                "JSON",
                                "CSV"
                            ],
                            "desc": "Type of file to load, default = image.\nIf both 'file_path' and 'default' are not specified when 'file_type=\"Image\"',\na default image will be loaded.\nIf the file path is not specified and the default input is not connected,\na ValueError is raised.",
                            "overload": null,
                            "functionName": "LOCAL_FILE",
                            "param": "file_type",
                            "value": "Grayscale"
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "String",
                            "desc": "If this input node is connected, the file name will be taken from\nthe output of the connected node.\nTo be used in conjunction with batch processing.",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Image|DataFrame|Grayscale",
                            "desc": "Image for file_type 'image'.\nGrayscale from file_type 'Grayscale'.\nDataFrame for file_type 'json', 'csv'."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "scikit-image",
                            "v": "0.21.0"
                        }
                    ],
                    "path": "ETL/LOAD/LOCAL_FILE_SYSTEM/LOCAL_FILE/LOCAL_FILE.py"
                },
                "position": {
                    "x": -369.60187718901227,
                    "y": 288.75291662326856
                },
                "width": 216,
                "height": 188,
                "selected": false,
                "dragging": false,
                "positionAbsolute": {
                    "x": -369.60187718901227,
                    "y": 288.75291662326856
                }
            },
            {
                "id": "IMAGE-641d6bb5-e956-4653-b1d9-000eb5446255",
                "type": "VISUALIZATION",
                "data": {
                    "id": "IMAGE-641d6bb5-e956-4653-b1d9-000eb5446255",
                    "label": "IMAGE 3",
                    "func": "IMAGE",
                    "type": "VISUALIZATION",
                    "ctrls": {},
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Image|Grayscale",
                            "desc": "the DataContainer to be visualized",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Plotly",
                            "desc": "the DataContainer containing the Plotly Image visualization of the input image"
                        }
                    ],
                    "path": "DATA/VISUALIZATION/PLOTLY/IMAGE/IMAGE.py"
                },
                "position": {
                    "x": -296.5506609988547,
                    "y": -181.3844675088318
                },
                "width": 225,
                "height": 225,
                "selected": false,
                "positionAbsolute": {
                    "x": -296.5506609988547,
                    "y": -181.3844675088318
                },
                "dragging": false
            },
            {
                "id": "LOCAL_FILE-81e91252-621d-44a1-9a2f-dc7081b8b522",
                "type": "LOAD",
                "data": {
                    "id": "LOCAL_FILE-81e91252-621d-44a1-9a2f-dc7081b8b522",
                    "label": "TIF LOADER",
                    "func": "LOCAL_FILE",
                    "type": "LOAD",
                    "ctrls": {
                        "file_path": {
                            "type": "str",
                            "default": null,
                            "desc": "The path to the file to be loaded. This can be either an absolute path or\na path relative to the \"nodes\" directory.",
                            "overload": null,
                            "functionName": "LOCAL_FILE",
                            "param": "file_path",
                            "value": "COMPUTER_VISION/EXTREMA_DETERMINATION/assets/highrange.tif"
                        },
                        "file_type": {
                            "type": "select",
                            "default": "Image",
                            "options": [
                                "Image",
                                "Grayscale",
                                "JSON",
                                "CSV"
                            ],
                            "desc": "Type of file to load, default = image.\nIf both 'file_path' and 'default' are not specified when 'file_type=\"Image\"',\na default image will be loaded.\nIf the file path is not specified and the default input is not connected,\na ValueError is raised.",
                            "overload": null,
                            "functionName": "LOCAL_FILE",
                            "param": "file_type",
                            "value": "Grayscale"
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "String",
                            "desc": "If this input node is connected, the file name will be taken from\nthe output of the connected node.\nTo be used in conjunction with batch processing.",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Image|DataFrame|Grayscale",
                            "desc": "Image for file_type 'image'.\nGrayscale from file_type 'Grayscale'.\nDataFrame for file_type 'json', 'csv'."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "scikit-image",
                            "v": "0.21.0"
                        }
                    ],
                    "path": "ETL/LOAD/LOCAL_FILE_SYSTEM/LOCAL_FILE/LOCAL_FILE.py"
                },
                "position": {
                    "x": 166.00819097997248,
                    "y": -381.18588359127534
                },
                "width": 216,
                "height": 188,
                "selected": false,
                "positionAbsolute": {
                    "x": 166.00819097997248,
                    "y": -381.18588359127534
                },
                "dragging": false
            },
            {
                "id": "IMAGE-3d28258f-a4e4-4fdd-a055-d5fce86f0226",
                "type": "VISUALIZATION",
                "data": {
                    "id": "IMAGE-3d28258f-a4e4-4fdd-a055-d5fce86f0226",
                    "label": "IMAGE 1",
                    "func": "IMAGE",
                    "type": "VISUALIZATION",
                    "ctrls": {},
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Image|Grayscale",
                            "desc": "the DataContainer to be visualized",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Plotly",
                            "desc": "the DataContainer containing the Plotly Image visualization of the input image"
                        }
                    ],
                    "path": "DATA/VISUALIZATION/PLOTLY/IMAGE/IMAGE.py"
                },
                "position": {
                    "x": 1163.9053537491234,
                    "y": -135.90963058094712
                },
                "width": 225,
                "height": 225,
                "selected": false,
                "positionAbsolute": {
                    "x": 1163.9053537491234,
                    "y": -135.90963058094712
                },
                "dragging": false
            },
            {
                "id": "IMAGE-bddf0b2f-446a-47fb-b54b-9535a6691f3b",
                "type": "VISUALIZATION",
                "data": {
                    "id": "IMAGE-bddf0b2f-446a-47fb-b54b-9535a6691f3b",
                    "label": "IMAGE",
                    "func": "IMAGE",
                    "type": "VISUALIZATION",
                    "ctrls": {},
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Image|Grayscale",
                            "desc": "the DataContainer to be visualized",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Plotly",
                            "desc": "the DataContainer containing the Plotly Image visualization of the input image"
                        }
                    ],
                    "path": "DATA/VISUALIZATION/PLOTLY/IMAGE/IMAGE.py"
                },
                "position": {
                    "x": 674.8525297204955,
                    "y": 23.60948220238572
                },
                "width": 225,
                "height": 225,
                "selected": false,
                "positionAbsolute": {
                    "x": 674.8525297204955,
                    "y": 23.60948220238572
                },
                "dragging": false
            }
        ],
        "edges": [
            {
                "id": "LOCAL_FILE-179e7f3b-34d2-434b-a797-58eace9c9208->EXTREMA_DETERMINATION-601e08c6-42d6-4b85-aa87-5e8ea4d4abb5_97fed781-a84b-4d8a-9fd4-5d1f030069b4",
                "source": "LOCAL_FILE-179e7f3b-34d2-434b-a797-58eace9c9208",
                "target": "EXTREMA_DETERMINATION-601e08c6-42d6-4b85-aa87-5e8ea4d4abb5",
                "sourceHandle": "default",
                "targetHandle": "default",
                "data": {
                    "outputType": "Image"
                }
            },
            {
                "id": "LOCAL_FILE-e7481241-5ed9-4816-b30c-6dacd31c8d97->EXTREMA_DETERMINATION-044a2e60-2992-456e-807d-27a973df9925_d4ab5da1-8705-4311-ab0f-638727d44fee",
                "source": "LOCAL_FILE-e7481241-5ed9-4816-b30c-6dacd31c8d97",
                "target": "EXTREMA_DETERMINATION-044a2e60-2992-456e-807d-27a973df9925",
                "sourceHandle": "default",
                "targetHandle": "default",
                "data": {
                    "outputType": "Image"
                }
            },
            {
                "source": "EXTREMA_DETERMINATION-601e08c6-42d6-4b85-aa87-5e8ea4d4abb5",
                "sourceHandle": "blobs",
                "target": "REGION_PROPERTIES-5d3e79fd-90cb-49a9-8cad-30468d046ec8",
                "targetHandle": "default",
                "id": "reactflow__edge-EXTREMA_DETERMINATION-601e08c6-42d6-4b85-aa87-5e8ea4d4abb5blobs-REGION_PROPERTIES-5d3e79fd-90cb-49a9-8cad-30468d046ec8default"
            },
            {
                "source": "EXTREMA_DETERMINATION-31c62e4e-d139-421c-aa63-7029a27dd453",
                "sourceHandle": "blobs",
                "target": "REGION_PROPERTIES-373847d3-c96e-4c79-a80e-8d6d1f551945",
                "targetHandle": "default",
                "id": "reactflow__edge-EXTREMA_DETERMINATION-31c62e4e-d139-421c-aa63-7029a27dd453blobs-REGION_PROPERTIES-373847d3-c96e-4c79-a80e-8d6d1f551945default"
            },
            {
                "source": "EXTREMA_DETERMINATION-044a2e60-2992-456e-807d-27a973df9925",
                "sourceHandle": "blobs",
                "target": "REGION_PROPERTIES-bd45eb65-94ef-4d5b-a822-ca6653fe7988",
                "targetHandle": "default",
                "id": "reactflow__edge-EXTREMA_DETERMINATION-044a2e60-2992-456e-807d-27a973df9925blobs-REGION_PROPERTIES-bd45eb65-94ef-4d5b-a822-ca6653fe7988default"
            },
            {
                "id": "LOCAL_FILE-81e91252-621d-44a1-9a2f-dc7081b8b522->EXTREMA_DETERMINATION-31c62e4e-d139-421c-aa63-7029a27dd453_287e7a2b-c57b-48d4-bf77-8827ccabf5ba",
                "source": "LOCAL_FILE-81e91252-621d-44a1-9a2f-dc7081b8b522",
                "target": "EXTREMA_DETERMINATION-31c62e4e-d139-421c-aa63-7029a27dd453",
                "sourceHandle": "default",
                "targetHandle": "default",
                "data": {
                    "outputType": "Image"
                }
            },
            {
                "id": "EXTREMA_DETERMINATION-044a2e60-2992-456e-807d-27a973df9925->IMAGE-641d6bb5-e956-4653-b1d9-000eb5446255_9d59e61b-a246-4de3-88d3-80cefa2a5149",
                "source": "EXTREMA_DETERMINATION-044a2e60-2992-456e-807d-27a973df9925",
                "target": "IMAGE-641d6bb5-e956-4653-b1d9-000eb5446255",
                "sourceHandle": "blobs",
                "targetHandle": "default",
                "data": {
                    "outputType": "Grayscale"
                }
            },
            {
                "id": "EXTREMA_DETERMINATION-31c62e4e-d139-421c-aa63-7029a27dd453->IMAGE-3d28258f-a4e4-4fdd-a055-d5fce86f0226_fbe466fc-97a2-4286-8a6f-f100297c1aae",
                "source": "EXTREMA_DETERMINATION-31c62e4e-d139-421c-aa63-7029a27dd453",
                "target": "IMAGE-3d28258f-a4e4-4fdd-a055-d5fce86f0226",
                "sourceHandle": "blobs",
                "targetHandle": "default",
                "data": {
                    "outputType": "Grayscale"
                }
            },
            {
                "id": "EXTREMA_DETERMINATION-601e08c6-42d6-4b85-aa87-5e8ea4d4abb5->IMAGE-bddf0b2f-446a-47fb-b54b-9535a6691f3b_2694b68d-ca81-44fa-9550-ab526a703961",
                "source": "EXTREMA_DETERMINATION-601e08c6-42d6-4b85-aa87-5e8ea4d4abb5",
                "target": "IMAGE-bddf0b2f-446a-47fb-b54b-9535a6691f3b",
                "sourceHandle": "blobs",
                "targetHandle": "default",
                "data": {
                    "outputType": "Grayscale"
                }
            }
        ]
    },
    "textNodes": []
}