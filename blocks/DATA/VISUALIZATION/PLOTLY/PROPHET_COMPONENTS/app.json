{
    "rfInstance": {
        "nodes": [
            {
                "width": 216,
                "height": 233,
                "id": "PROPHET_PREDICT-bf17e862-67c6-4a3a-b49f-9c78a7885d21",
                "type": "AI_ML",
                "data": {
                    "id": "PROPHET_PREDICT-bf17e862-67c6-4a3a-b49f-9c78a7885d21",
                    "label": "PROPHET PREDICT",
                    "func": "PROPHET_PREDICT",
                    "type": "AI_ML",
                    "ctrls": {
                        "run_forecast": {
                            "type": "bool",
                            "default": true,
                            "desc": "If True (default case), the dataframe of the returning DataContainer\n('m' parameter of the DataContainer) will be the forecasted dataframe.\nIt will also have an 'extra' field with the key 'original', which is\nthe original dataframe passed in.\n\nIf False, the returning dataframe will be the original data.\n\nThis node will also always have an 'extra' field, run_forecast, which\nmatches that of the parameters passed in. This is for future nodes\nto know if a forecast has already been run.\n\nDefault = True",
                            "functionName": "PROPHET_PREDICT",
                            "param": "run_forecast",
                            "value": true,
                            "overload": null
                        },
                        "periods": {
                            "type": "int",
                            "default": 365,
                            "desc": "The number of periods to predict out. Only used if run_forecast is True.\nDefault = 365",
                            "functionName": "PROPHET_PREDICT",
                            "param": "periods",
                            "value": 365,
                            "overload": null
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "DataFrame",
                            "desc": null,
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "DataFrame",
                            "desc": "With parameter as df.\nIndicates either the original df passed in, or the forecasted df\n(depending on if run_forecast is True)."
                        }
                    ],
                    "path": "AI_ML/PREDICT_TIME_SERIES/PROPHET_PREDICT/PROPHET_PREDICT.py",
                    "selected": false
                },
                "position": {
                    "x": -118.10715556836178,
                    "y": -180.13956229637358
                },
                "selected": false,
                "positionAbsolute": {
                    "x": -118.10715556836178,
                    "y": -180.13956229637358
                },
                "dragging": false
            },
            {
                "id": "TIMESERIES-6fb87b9d-4d99-4058-9e05-ca8bc8b62838",
                "type": "DATA",
                "data": {
                    "id": "TIMESERIES-6fb87b9d-4d99-4058-9e05-ca8bc8b62838",
                    "label": "TIMESERIES",
                    "func": "TIMESERIES",
                    "type": "DATA",
                    "ctrls": {
                        "start_date": {
                            "type": "str",
                            "default": "2023-01-01",
                            "desc": "The start date of the timeseries in the format 'YYYY:MM:DD'.",
                            "overload": null,
                            "functionName": "TIMESERIES",
                            "param": "start_date",
                            "value": "2023-01-01"
                        },
                        "end_date": {
                            "type": "str",
                            "default": "2023-07-20",
                            "desc": "The end date of the timeseries in the format 'YYYY:MM:DD'.",
                            "overload": null,
                            "functionName": "TIMESERIES",
                            "param": "end_date",
                            "value": "2023-07-20"
                        }
                    },
                    "initCtrls": {},
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "DataFrame",
                            "desc": "m: the resulting timeseries"
                        }
                    ],
                    "path": "DATA/GENERATION/SIMULATIONS/TIMESERIES/TIMESERIES.py"
                },
                "position": {
                    "x": -504.2465567127836,
                    "y": -177.11286766820848
                },
                "width": 218,
                "height": 197,
                "selected": false,
                "positionAbsolute": {
                    "x": -504.2465567127836,
                    "y": -177.11286766820848
                },
                "dragging": false
            },
            {
                "id": "PROPHET_COMPONENTS-b1345625-0cc5-49e1-9200-0744437374d4",
                "type": "VISUALIZATION",
                "data": {
                    "id": "PROPHET_COMPONENTS-b1345625-0cc5-49e1-9200-0744437374d4",
                    "label": "PROPHET COMPONENTS",
                    "func": "PROPHET_COMPONENTS",
                    "type": "VISUALIZATION",
                    "ctrls": {
                        "periods": {
                            "type": "int",
                            "default": 365,
                            "desc": "The number of periods out to predict.\nOnly used if the node passed into this node (i.e. PROPHET_PREDICT) did NOT return the forecast.\nIf the forecast was included in the DataContainer, this parameter will be ignored.\n\nDefault = 365",
                            "overload": null,
                            "functionName": "PROPHET_COMPONENTS",
                            "param": "periods",
                            "value": 365
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "DataFrame",
                            "desc": "the DataContainer to be visualized",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Plotly",
                            "desc": "the DataContainer containing the Plotly visualization of the prophet model"
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "prophet",
                            "v": "1.1.5"
                        }
                    ],
                    "path": "DATA/VISUALIZATION/PLOTLY/PROPHET_COMPONENTS/PROPHET_COMPONENTS.py"
                },
                "position": {
                    "x": 233.8382391810706,
                    "y": -444.46499118156896
                },
                "width": 225,
                "height": 225,
                "selected": false,
                "positionAbsolute": {
                    "x": 233.8382391810706,
                    "y": -444.46499118156896
                },
                "dragging": false
            },
            {
                "id": "PROPHET_PLOT-90abac77-d379-44c0-844a-e54bac208c40",
                "type": "VISUALIZATION",
                "data": {
                    "id": "PROPHET_PLOT-90abac77-d379-44c0-844a-e54bac208c40",
                    "label": "PROPHET PLOT",
                    "func": "PROPHET_PLOT",
                    "type": "VISUALIZATION",
                    "ctrls": {
                        "periods": {
                            "type": "int",
                            "default": 365,
                            "desc": "The number of periods out to predict.\nOnly used if the node passed into this node (i.e. PROPHET_PREDICT) did NOT return the forecast.\nIf the forecast was included in the DataContainer, this parameter will be ignored.\n\nDefault = 365",
                            "overload": null,
                            "functionName": "PROPHET_PLOT",
                            "param": "periods",
                            "value": 365
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "DataFrame",
                            "desc": "the DataContainer to be visualized",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Plotly",
                            "desc": "the DataContainer containing the Plotly visualization of the prophet model"
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "prophet",
                            "v": "1.1.5"
                        }
                    ],
                    "path": "DATA/VISUALIZATION/PLOTLY/PROPHET_PLOT/PROPHET_PLOT.py"
                },
                "position": {
                    "x": 236.9527612644443,
                    "y": 28.458859291228293
                },
                "width": 225,
                "height": 225,
                "selected": false,
                "positionAbsolute": {
                    "x": 236.9527612644443,
                    "y": 28.458859291228293
                },
                "dragging": false
            }
        ],
        "edges": [
            {
                "id": "TIMESERIES-6fb87b9d-4d99-4058-9e05-ca8bc8b62838->PROPHET_PREDICT-bf17e862-67c6-4a3a-b49f-9c78a7885d21_5a492097-7cf6-4441-84d0-dfc1882f8ae5",
                "source": "TIMESERIES-6fb87b9d-4d99-4058-9e05-ca8bc8b62838",
                "target": "PROPHET_PREDICT-bf17e862-67c6-4a3a-b49f-9c78a7885d21",
                "sourceHandle": "default",
                "targetHandle": "default",
                "data": {
                    "outputType": "DataFrame"
                }
            },
            {
                "id": "PROPHET_PREDICT-bf17e862-67c6-4a3a-b49f-9c78a7885d21->PROPHET_COMPONENTS-b1345625-0cc5-49e1-9200-0744437374d4_8506c594-b1b0-4874-9954-6586d8da1889",
                "source": "PROPHET_PREDICT-bf17e862-67c6-4a3a-b49f-9c78a7885d21",
                "target": "PROPHET_COMPONENTS-b1345625-0cc5-49e1-9200-0744437374d4",
                "sourceHandle": "default",
                "targetHandle": "default",
                "data": {
                    "outputType": "DataFrame"
                }
            },
            {
                "id": "PROPHET_PREDICT-bf17e862-67c6-4a3a-b49f-9c78a7885d21->PROPHET_PLOT-90abac77-d379-44c0-844a-e54bac208c40_3988e164-8713-4bbb-8e3b-b6e4cea58d0c",
                "source": "PROPHET_PREDICT-bf17e862-67c6-4a3a-b49f-9c78a7885d21",
                "target": "PROPHET_PLOT-90abac77-d379-44c0-844a-e54bac208c40",
                "sourceHandle": "default",
                "targetHandle": "default",
                "data": {
                    "outputType": "DataFrame"
                }
            }
        ]
    },
    "textNodes": [],
    "controlNodes": [],
    "controlVisualizationNodes": [],
    "controlTextNodes": []
}