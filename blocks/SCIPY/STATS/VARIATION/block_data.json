{
  "docstring": {
    "long_description": "The description of that function is as follows:\n\n    Compute the coefficient of variation.\n\n    The coefficient of variation is the standard deviation divided by the mean.\n\n    This function is equivalent to:\n\n    np.std(x, axis=axis, ddof=ddof) / np.mean(x)\n\n    The default for 'ddof' is 0, but many definitions of the coefficient of variation use the square root of the unbiased sample variance for the sample standard deviation, which corresponds to 'ddof=1'.\n\n    The function does not take the absolute value of the mean of the data, so the return value is negative if the mean is negative.",
    "short_description": "The VARIATION node is based on a numpy or scipy function.",
    "parameters": [
      {
        "name": "a",
        "type": "array_like",
        "description": "Input array."
      },
      {
        "name": "axis",
        "type": "int",
        "description": "Axis along which to calculate the coefficient of variation.\nDefault is 0.\nIf None, compute over the whole array 'a'."
      },
      {
        "name": "nan_policy",
        "type": "{'propagate', 'raise', 'omit'}",
        "description": "Defines how to handle when input contains 'nan'.\nThe following options are available:\n'propagate' : return 'nan'\n'raise' : raise an exception\n'omit' : perform the calculation with 'nan' values omitted\nThe default is 'propagate'."
      },
      {
        "name": "ddof",
        "type": "int",
        "description": "Gives the \"Delta Degrees Of Freedom\" used when computing the standard deviation.\nThe divisor used in the calculation of the standard deviation is 'N - ddof',\nwhere 'N' is the number of elements.\n'ddof' must be less than 'N'; if it isn't, the result will be 'nan' or 'inf',\ndepending on 'N' and the values in the array.\nBy default, 'ddof' is zero for backwards compatibility,\nbut it is recommended to use 'ddof=1' to ensure that the sample\nstandard deviation is computed as the square root of the unbiased\nsample variance."
      },
      {
        "name": "keepdims",
        "type": "bool",
        "description": "If this is set to True, the axes which are reduced are left in the\nresult as dimensions with size one.\nWith this option, the result will broadcast correctly against the input array."
      }
    ],
    "returns": [
      {
        "name": null,
        "type": "DataContainer",
        "description": "type 'ordered pair', 'scalar', or 'matrix'"
      }
    ]
  }
}