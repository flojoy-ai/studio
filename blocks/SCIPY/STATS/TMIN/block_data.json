{
  "docstring": {
    "long_description": "The description of that function is as follows:\n\n    Compute the trimmed minimum.\n\n    This function finds the miminum value of an array 'a' along the specified axis, but only considering values greater than a specified lower limit.",
    "short_description": "The TMIN node is based on a numpy or scipy function.",
    "parameters": [
      {
        "name": "a",
        "type": "array_like",
        "description": "Array of values."
      },
      {
        "name": "lowerlimit",
        "type": "None or float",
        "description": "Values in the input array less than the given limit will be ignored.\nWhen lowerlimit is None, then all values are used.\nThe default value is None."
      },
      {
        "name": "axis",
        "type": "int or None",
        "description": "Axis along which to operate.\nDefault is 0.\nIf None, compute over the whole array 'a'."
      },
      {
        "name": "inclusive",
        "type": "{True, False}",
        "description": "This flag determines whether values exactly equal to the lower limit are included.\nThe default value is True."
      },
      {
        "name": "nan_policy",
        "type": "{'propagate', 'raise', 'omit'}",
        "description": "Defines how to handle when input contains nan.\nThe following options are available (default is 'propagate'):\n'propagate' : returns nan\n'raise' : raises an error\n'omit' : performs the calculations ignoring nan values"
      }
    ],
    "returns": [
      {
        "name": null,
        "type": "DataContainer",
        "description": "type 'ordered pair', 'scalar', or 'matrix'"
      }
    ]
  }
}