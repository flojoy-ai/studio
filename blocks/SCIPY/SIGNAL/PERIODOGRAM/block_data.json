{
  "docstring": {
    "long_description": "The description of that function is as follows:\n\n    Estimate power spectral density using a periodogram.",
    "short_description": "The PERIODOGRAM node is based on a numpy or scipy function.",
    "parameters": [
      {
        "name": "select_return",
        "type": "'f', 'Pxx'.",
        "description": "Select the desired object to return.\nSee the respective function docs for descriptors."
      },
      {
        "name": "x",
        "type": "array_like",
        "description": "Time series of measurement values."
      },
      {
        "name": "fs",
        "type": "float",
        "description": "Sampling frequency of the 'x' time series.\nDefaults to 1.0."
      },
      {
        "name": "window",
        "type": "str or tuple or array_like",
        "description": "Desired window to use.\nIf 'window' is a string or tuple, it is passed to 'get_window' to\ngenerate the window values, which are DFT-even by default.\nSee 'get_window' for a list of windows and required parameters.\nIf 'window' is array_like, it will be used directly as the window\nand its length must be nperseg.\nDefaults to 'boxcar'."
      },
      {
        "name": "nfft",
        "type": "int",
        "description": "Length of the FFT used.\nIf 'None', the length of 'x' will be used."
      },
      {
        "name": "detrend",
        "type": "str or function or 'False'",
        "description": "Specifies how to detrend each segment.\nIf 'detrend' is a string, it is passed as the 'type' argument\nto the 'detrend' function.\nIf it is a function, it takes a segment and returns a detrended segment.\nIf 'detrend' is 'False', no detrending is done.\nDefaults to 'constant'."
      },
      {
        "name": "return_onesided",
        "type": "bool",
        "description": "If 'True', return a one-sided spectrum for real data.\nIf 'False', return a two-sided spectrum.\nDefaults to 'True', but for complex data,\na two-sided spectrum is always returned."
      },
      {
        "name": "scaling",
        "type": "{ 'density', 'spectrum' }",
        "description": "Selects between computing the power spectral density ('density')\nwhere 'Pxx' has units of V**2/Hz and computing the power\nspectrum ('spectrum') where 'Pxx' has units of V**2, if 'x'\nis measured in V and 'fs' is measured in Hz.\nDefaults to 'density'."
      },
      {
        "name": "axis",
        "type": "int",
        "description": "Axis along which the periodogram is computed;\nthe default is over the last axis (i.e. axis=-1)."
      }
    ],
    "returns": [
      {
        "name": null,
        "type": "DataContainer",
        "description": "type 'ordered pair', 'scalar', or 'matrix'"
      }
    ]
  }
}