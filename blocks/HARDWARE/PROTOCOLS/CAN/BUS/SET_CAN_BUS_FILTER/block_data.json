{
  "docstring": {
    "long_description": "Setup a message filtering can be set up for each bus.\nThe binary operation is as follow: <received_can_id> & can_mask == can_id & can_mask\nAll messages that match at least one filter are returned.\n\nWhere the interface supports it, this is carried out in the hardware or kernel layer - not in Python.\nA connection to the device is required. Use a CAN_CONNECT block to connect to a CAN device.",
    "short_description": "Attach a message filter to a CAN bus connection.",
    "parameters": [
      {
        "name": "CAN_address",
        "type": "str",
        "description": "The CAN bus address to attach the filter to."
      },
      {
        "name": "can_id",
        "type": "int",
        "description": "The ID of the message to filter."
      },
      {
        "name": "can_mask",
        "type": "int",
        "description": "Apply a binary mask to the ID and can_id."
      },
      {
        "name": "extended",
        "type": "bool",
        "description": "If true, only matches messages where <received_is_extended> == extended."
      }
    ],
    "returns": [
      {
        "name": null,
        "type": "DataContainer",
        "description": "Optional: None"
      }
    ]
  }
}