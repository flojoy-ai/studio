{
    "rfInstance": {
        "nodes": [
            {
                "width": 96,
                "height": 96,
                "id": "LOOP-75e7d747-dffb-43bd-95ad-7c63b0d5dad3",
                "type": "LOGIC_GATES",
                "data": {
                    "id": "LOOP-75e7d747-dffb-43bd-95ad-7c63b0d5dad3",
                    "label": "LOOP",
                    "func": "LOOP",
                    "type": "LOGIC_GATES",
                    "ctrls": {
                        "num_loops": {
                            "type": "int",
                            "default": -1,
                            "desc": "number of times to iterate through body nodes, default is \"-1\" meaning infinity.",
                            "overload": null,
                            "functionName": "LOOP",
                            "param": "num_loops",
                            "value": -1
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "multiple": false,
                            "desc": null
                        }
                    ],
                    "outputs": [
                        {
                            "name": "body",
                            "id": "body",
                            "type": "Any",
                            "desc": null
                        },
                        {
                            "name": "end",
                            "id": "end",
                            "type": "Any",
                            "desc": null
                        }
                    ],
                    "path": "LOGIC_GATES/LOOPS/LOOP/LOOP.py",
                    "selected": false
                },
                "position": {
                    "x": -116.29948702183822,
                    "y": 59.913468061214076
                },
                "selected": false,
                "positionAbsolute": {
                    "x": -116.29948702183822,
                    "y": 59.913468061214076
                },
                "dragging": true
            },
            {
                "width": 96,
                "height": 96,
                "id": "LOOP_INDEX-fa5ffe40-d8e7-40bb-99d8-5d41138631f1",
                "type": "LOGIC_GATES",
                "data": {
                    "id": "LOOP_INDEX-fa5ffe40-d8e7-40bb-99d8-5d41138631f1",
                    "label": "LOOP INDEX",
                    "func": "LOOP_INDEX",
                    "type": "LOGIC_GATES",
                    "ctrls": {
                        "loop_node": {
                            "type": "NodeReference",
                            "default": null,
                            "desc": "The LOOP node to track the loop index from.",
                            "overload": null,
                            "functionName": "LOOP_INDEX",
                            "param": "loop_node",
                            "value": "LOOP-75e7d747-dffb-43bd-95ad-7c63b0d5dad3"
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "OrderedPair|Scalar",
                            "multiple": false,
                            "desc": null
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Scalar",
                            "desc": "The loop index in Scalar form."
                        }
                    ],
                    "path": "LOGIC_GATES/LOOP_TOOLS/LOOP_INDEX/LOOP_INDEX.py",
                    "selected": false
                },
                "position": {
                    "x": 83.64627496051924,
                    "y": 2.4822128172604607
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 83.64627496051924,
                    "y": 2.4822128172604607
                },
                "dragging": true
            },
            {
                "width": 96,
                "height": 96,
                "id": "TIMER-28a4d905-a57c-4e51-991a-94a92a861ee7",
                "type": "LOGIC_GATES",
                "data": {
                    "id": "TIMER-28a4d905-a57c-4e51-991a-94a92a861ee7",
                    "label": "TIMER",
                    "func": "TIMER",
                    "type": "LOGIC_GATES",
                    "ctrls": {
                        "sleep_time": {
                            "type": "float",
                            "default": 0,
                            "desc": "number of seconds to sleep",
                            "overload": null,
                            "functionName": "TIMER",
                            "param": "sleep_time",
                            "value": 0
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "multiple": false,
                            "desc": null
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": null
                        }
                    ],
                    "path": "LOGIC_GATES/TIMERS/TIMER/TIMER.py",
                    "selected": false
                },
                "position": {
                    "x": 1079.3674744809105,
                    "y": 316.79694538939
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 1079.3674744809105,
                    "y": 316.79694538939
                },
                "dragging": true
            },
            {
                "width": 72,
                "height": 72,
                "id": "MULTIPLY-337609f2-02ec-4bf1-8f11-f1663e4de744",
                "type": "ARITHMETIC",
                "data": {
                    "id": "MULTIPLY-337609f2-02ec-4bf1-8f11-f1663e4de744",
                    "label": "MULTIPLY",
                    "func": "MULTIPLY",
                    "type": "ARITHMETIC",
                    "ctrls": {},
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "a",
                            "id": "a",
                            "type": "OrderedPair|Scalar|Vector",
                            "multiple": false,
                            "desc": "The input a use to compute the product of a and b."
                        },
                        {
                            "name": "b",
                            "id": "b",
                            "type": "OrderedPair|Scalar|Vector",
                            "multiple": true,
                            "desc": "The input b use to compute the product of a and b."
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "OrderedPair|Scalar|Vector",
                            "desc": "OrderedPair if a is an OrderedPair.\nx: the x-axis of input a.\ny: the result of the product of input a and input b.\n\nScalar if a is a Scalar.\nc: the result of the product of input a and input b.\n\nVector if a is a Vector.\nv: the result of the product of input a and input b."
                        }
                    ],
                    "path": "TRANSFORMERS/ARITHMETIC/MULTIPLY/MULTIPLY.py",
                    "selected": false
                },
                "position": {
                    "x": 390.125498058375,
                    "y": 344.50805752457296
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 390.125498058375,
                    "y": 344.50805752457296
                },
                "dragging": true
            },
            {
                "width": 208,
                "height": 96,
                "id": "CONSTANT-e9fc3f1b-fdac-4192-9333-5697952c55de",
                "type": "GENERATORS",
                "data": {
                    "id": "CONSTANT-e9fc3f1b-fdac-4192-9333-5697952c55de",
                    "label": "1",
                    "func": "CONSTANT",
                    "type": "GENERATORS",
                    "ctrls": {
                        "dc_type": {
                            "type": "select",
                            "options": [
                                "Scalar",
                                "Vector",
                                "OrderedPair"
                            ],
                            "default": "OrderedPair",
                            "desc": "The type of DataContainer to return.",
                            "overload": null,
                            "functionName": "CONSTANT",
                            "param": "dc_type",
                            "value": "Scalar"
                        },
                        "constant": {
                            "type": "float",
                            "default": 3,
                            "desc": "The value of the y axis output.",
                            "overload": null,
                            "functionName": "CONSTANT",
                            "param": "constant",
                            "value": 1
                        },
                        "step": {
                            "type": "float",
                            "default": 1000,
                            "desc": "The size of the y and x axes.",
                            "overload": null,
                            "functionName": "CONSTANT",
                            "param": "step",
                            "value": 1000
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Vector|OrderedPair",
                            "multiple": false,
                            "desc": "Optional input that defines the size of the output."
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "OrderedPair|Vector|Scalar",
                            "desc": "OrderedPair if selected\nx: the x axis generated with size 'step'\ny: the resulting constant with size 'step'\nVector if selected\nv: the resulting constant with size 'step'\nScalar if selected\nc: the resulting constant"
                        }
                    ],
                    "path": "GENERATORS/SIMULATIONS/CONSTANT/CONSTANT.py",
                    "selected": false
                },
                "position": {
                    "x": 82.77858624045928,
                    "y": 420.26330517604515
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 82.77858624045928,
                    "y": 420.26330517604515
                },
                "dragging": true
            },
            {
                "width": 96,
                "height": 96,
                "id": "CONDITIONAL-6d7f2f21-79d7-4ce3-97c7-f02ce04c7d7a",
                "type": "CONDITIONALS",
                "data": {
                    "id": "CONDITIONAL-6d7f2f21-79d7-4ce3-97c7-f02ce04c7d7a",
                    "label": "CONDITIONAL",
                    "func": "CONDITIONAL",
                    "type": "CONDITIONALS",
                    "ctrls": {
                        "operator_type": {
                            "type": "select",
                            "options": [
                                "<=",
                                ">",
                                "<",
                                ">=",
                                "!=",
                                "=="
                            ],
                            "default": ">=",
                            "desc": "Specifies the type of comparison to be performed between the two inputs. The default value is \">=\".",
                            "overload": null,
                            "functionName": "CONDITIONAL",
                            "param": "operator_type",
                            "value": ">="
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "x",
                            "id": "x",
                            "type": "Scalar",
                            "multiple": false,
                            "desc": null
                        },
                        {
                            "name": "y",
                            "id": "y",
                            "type": "Scalar",
                            "multiple": false,
                            "desc": null
                        }
                    ],
                    "outputs": [
                        {
                            "name": "true",
                            "id": "true",
                            "type": "Any",
                            "desc": null
                        },
                        {
                            "name": "false",
                            "id": "false",
                            "type": "Any",
                            "desc": null
                        }
                    ],
                    "path": "LOGIC_GATES/CONDITIONALS/CONDITIONAL/CONDITIONAL.py",
                    "selected": false
                },
                "position": {
                    "x": 315.0608334890218,
                    "y": -181.3168225871309
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 315.0608334890218,
                    "y": -181.3168225871309
                },
                "dragging": true
            },
            {
                "width": 208,
                "height": 96,
                "id": "CONSTANT-c92203cf-b9e9-4ff1-a501-958e728cbb4f",
                "type": "GENERATORS",
                "data": {
                    "id": "CONSTANT-c92203cf-b9e9-4ff1-a501-958e728cbb4f",
                    "label": "15",
                    "func": "CONSTANT",
                    "type": "GENERATORS",
                    "ctrls": {
                        "dc_type": {
                            "type": "select",
                            "options": [
                                "Scalar",
                                "Vector",
                                "OrderedPair"
                            ],
                            "default": "OrderedPair",
                            "desc": "The type of DataContainer to return.",
                            "overload": null,
                            "functionName": "CONSTANT",
                            "param": "dc_type",
                            "value": "Scalar"
                        },
                        "constant": {
                            "type": "float",
                            "default": 3,
                            "desc": "The value of the y axis output.",
                            "overload": null,
                            "functionName": "CONSTANT",
                            "param": "constant",
                            "value": 15
                        },
                        "step": {
                            "type": "float",
                            "default": 1000,
                            "desc": "The size of the y and x axes.",
                            "overload": null,
                            "functionName": "CONSTANT",
                            "param": "step",
                            "value": 1000
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Vector|OrderedPair",
                            "multiple": false,
                            "desc": "Optional input that defines the size of the output."
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "OrderedPair|Vector|Scalar",
                            "desc": "OrderedPair if selected\nx: the x axis generated with size 'step'\ny: the resulting constant with size 'step'\nVector if selected\nv: the resulting constant with size 'step'\nScalar if selected\nc: the resulting constant"
                        }
                    ],
                    "path": "GENERATORS/SIMULATIONS/CONSTANT/CONSTANT.py",
                    "selected": false
                },
                "position": {
                    "x": 4.795074623791379,
                    "y": -216.54312770220974
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 4.795074623791379,
                    "y": -216.54312770220974
                },
                "dragging": true
            },
            {
                "width": 96,
                "height": 96,
                "id": "BREAK-3f1a901d-47ac-4fd7-bfb7-ed690816f36a",
                "type": "LOGIC_GATES",
                "data": {
                    "id": "BREAK-3f1a901d-47ac-4fd7-bfb7-ed690816f36a",
                    "label": "BREAK",
                    "func": "BREAK",
                    "type": "LOGIC_GATES",
                    "ctrls": {
                        "referred_node": {
                            "type": "NodeReference",
                            "default": null,
                            "desc": "This is the specific instance of a LOOP node that you want to break.\nIt is required to differentiate between multiple LOOPs if they exist\nin the same application.",
                            "overload": null,
                            "functionName": "BREAK",
                            "param": "referred_node",
                            "value": ""
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "multiple": false,
                            "desc": "This node simply requires an input (most likely from\nthe return of a CONDITIONAL node) so that it is executed."
                        }
                    ],
                    "path": "LOGIC_GATES/LOOP_TOOLS/BREAK/BREAK.py",
                    "selected": false
                },
                "position": {
                    "x": 523.7614379895599,
                    "y": -240.5698667388382
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 523.7614379895599,
                    "y": -240.5698667388382
                },
                "dragging": true
            },
            {
                "width": 380,
                "height": 293,
                "id": "BIG_NUMBER-c2fd7485-9717-469e-8982-0ccb7c4a8f98",
                "type": "VISUALIZERS",
                "data": {
                    "id": "BIG_NUMBER-c2fd7485-9717-469e-8982-0ccb7c4a8f98",
                    "label": "BIG NUMBER 1",
                    "func": "BIG_NUMBER",
                    "type": "VISUALIZERS",
                    "ctrls": {
                        "suffix": {
                            "type": "str",
                            "default": null,
                            "desc": "any suffix to show with big number",
                            "overload": null,
                            "functionName": "BIG_NUMBER",
                            "param": "suffix",
                            "value": ""
                        },
                        "prefix": {
                            "type": "str",
                            "default": null,
                            "desc": "any prefix to show with big number",
                            "overload": null,
                            "functionName": "BIG_NUMBER",
                            "param": "prefix",
                            "value": ""
                        },
                        "title": {
                            "type": "str",
                            "default": null,
                            "desc": "title of the plot, default = \"BIG_NUMBER\"",
                            "overload": null,
                            "functionName": "BIG_NUMBER",
                            "param": "title",
                            "value": ""
                        },
                        "relative_delta": {
                            "type": "bool",
                            "default": true,
                            "desc": "whether or not to show the relative delta from the last run along with big number",
                            "overload": null,
                            "functionName": "BIG_NUMBER",
                            "param": "relative_delta",
                            "value": true
                        },
                        "scientific_notation": {
                            "type": "bool",
                            "default": false,
                            "desc": null,
                            "overload": null,
                            "functionName": "BIG_NUMBER",
                            "param": "scientific_notation",
                            "value": false
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "OrderedPair|Scalar|Vector",
                            "multiple": false,
                            "desc": "the DataContainer to be visualized"
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Plotly",
                            "desc": "the DataContainer containing the Plotly big number visualization"
                        }
                    ],
                    "path": "VISUALIZERS/PLOTLY/BIG_NUMBER/BIG_NUMBER.py",
                    "selected": false
                },
                "position": {
                    "x": 539.2234743407024,
                    "y": 234.674006466163
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 539.2234743407024,
                    "y": 234.674006466163
                },
                "dragging": true
            },
            {
                "width": 273,
                "height": 160,
                "id": "PRINT_DATACONTAINER-502b9e4d-4df5-4c71-be93-61e120f53429",
                "type": "EXTRACTORS",
                "data": {
                    "id": "PRINT_DATACONTAINER-502b9e4d-4df5-4c71-be93-61e120f53429",
                    "label": "PRINT DATACONTAINER",
                    "func": "PRINT_DATACONTAINER",
                    "type": "EXTRACTORS",
                    "ctrls": {},
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "multiple": false,
                            "desc": null
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "String",
                            "desc": "String: Input datacontainer information"
                        }
                    ],
                    "path": "EXTRACTORS/DEBUGGING/PRINT_DATACONTAINER/PRINT_DATACONTAINER.py",
                    "selected": false
                },
                "position": {
                    "x": 384.1373027816842,
                    "y": -20.91582777998923
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 384.1373027816842,
                    "y": -20.91582777998923
                },
                "dragging": true
            },
            {
                "width": 384,
                "height": 288,
                "id": "TEXT_VIEW-868b5fe2-e820-493a-84e1-cbc80df5ad72",
                "type": "VISUALIZERS",
                "data": {
                    "id": "TEXT_VIEW-868b5fe2-e820-493a-84e1-cbc80df5ad72",
                    "label": "TEXT VIEW",
                    "func": "TEXT_VIEW",
                    "type": "VISUALIZERS",
                    "ctrls": {
                        "prettify": {
                            "type": "bool",
                            "default": false,
                            "desc": "Whether to prettify the displayed text (defaults to True)",
                            "overload": null,
                            "functionName": "TEXT_VIEW",
                            "param": "prettify",
                            "value": false
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "String",
                            "multiple": false,
                            "desc": "The DataContainer to be visualized in text format"
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "String",
                            "desc": "The DataContainer containing text data"
                        }
                    ],
                    "path": "VISUALIZERS/DATA_STRUCTURE/TEXT_VIEW/TEXT_VIEW.py",
                    "selected": true
                },
                "position": {
                    "x": 822.0900664915534,
                    "y": -87.75646587269875
                },
                "selected": true,
                "positionAbsolute": {
                    "x": 822.0900664915534,
                    "y": -87.75646587269875
                },
                "dragging": true
            }
        ],
        "edges": [
            {
                "source": "CONSTANT-e9fc3f1b-fdac-4192-9333-5697952c55de",
                "sourceHandle": "default",
                "target": "MULTIPLY-337609f2-02ec-4bf1-8f11-f1663e4de744",
                "targetHandle": "b",
                "id": "reactflow__edge-CONSTANT-e9fc3f1b-fdac-4192-9333-5697952c55dedefault-MULTIPLY-337609f2-02ec-4bf1-8f11-f1663e4de744b"
            },
            {
                "source": "CONSTANT-c92203cf-b9e9-4ff1-a501-958e728cbb4f",
                "sourceHandle": "default",
                "target": "CONDITIONAL-6d7f2f21-79d7-4ce3-97c7-f02ce04c7d7a",
                "targetHandle": "y",
                "id": "reactflow__edge-CONSTANT-c92203cf-b9e9-4ff1-a501-958e728cbb4fdefault-CONDITIONAL-6d7f2f21-79d7-4ce3-97c7-f02ce04c7d7ay"
            },
            {
                "source": "CONDITIONAL-6d7f2f21-79d7-4ce3-97c7-f02ce04c7d7a",
                "sourceHandle": "true",
                "target": "BREAK-3f1a901d-47ac-4fd7-bfb7-ed690816f36a",
                "targetHandle": "default",
                "id": "reactflow__edge-CONDITIONAL-6d7f2f21-79d7-4ce3-97c7-f02ce04c7d7atrue-BREAK-3f1a901d-47ac-4fd7-bfb7-ed690816f36adefault"
            },
            {
                "source": "MULTIPLY-337609f2-02ec-4bf1-8f11-f1663e4de744",
                "sourceHandle": "default",
                "target": "BIG_NUMBER-c2fd7485-9717-469e-8982-0ccb7c4a8f98",
                "targetHandle": "default",
                "id": "reactflow__edge-MULTIPLY-337609f2-02ec-4bf1-8f11-f1663e4de744default-BIG_NUMBER-c2fd7485-9717-469e-8982-0ccb7c4a8f98default"
            },
            {
                "source": "BIG_NUMBER-c2fd7485-9717-469e-8982-0ccb7c4a8f98",
                "sourceHandle": "default",
                "target": "TIMER-28a4d905-a57c-4e51-991a-94a92a861ee7",
                "targetHandle": "default",
                "id": "reactflow__edge-BIG_NUMBER-c2fd7485-9717-469e-8982-0ccb7c4a8f98default-TIMER-28a4d905-a57c-4e51-991a-94a92a861ee7default"
            },
            {
                "source": "LOOP-75e7d747-dffb-43bd-95ad-7c63b0d5dad3",
                "sourceHandle": "body",
                "target": "LOOP_INDEX-fa5ffe40-d8e7-40bb-99d8-5d41138631f1",
                "targetHandle": "default",
                "id": "reactflow__edge-LOOP-75e7d747-dffb-43bd-95ad-7c63b0d5dad3body-LOOP_INDEX-fa5ffe40-d8e7-40bb-99d8-5d41138631f1default"
            },
            {
                "source": "LOOP_INDEX-fa5ffe40-d8e7-40bb-99d8-5d41138631f1",
                "sourceHandle": "default",
                "target": "PRINT_DATACONTAINER-502b9e4d-4df5-4c71-be93-61e120f53429",
                "targetHandle": "default",
                "id": "reactflow__edge-LOOP_INDEX-fa5ffe40-d8e7-40bb-99d8-5d41138631f1default-PRINT_DATACONTAINER-502b9e4d-4df5-4c71-be93-61e120f53429default"
            },
            {
                "source": "PRINT_DATACONTAINER-502b9e4d-4df5-4c71-be93-61e120f53429",
                "sourceHandle": "default",
                "target": "TEXT_VIEW-868b5fe2-e820-493a-84e1-cbc80df5ad72",
                "targetHandle": "default",
                "id": "reactflow__edge-PRINT_DATACONTAINER-502b9e4d-4df5-4c71-be93-61e120f53429default-TEXT_VIEW-868b5fe2-e820-493a-84e1-cbc80df5ad72default"
            },
            {
                "source": "LOOP_INDEX-fa5ffe40-d8e7-40bb-99d8-5d41138631f1",
                "sourceHandle": "default",
                "target": "CONDITIONAL-6d7f2f21-79d7-4ce3-97c7-f02ce04c7d7a",
                "targetHandle": "x",
                "id": "reactflow__edge-LOOP_INDEX-fa5ffe40-d8e7-40bb-99d8-5d41138631f1default-CONDITIONAL-6d7f2f21-79d7-4ce3-97c7-f02ce04c7d7ax"
            },
            {
                "source": "LOOP_INDEX-fa5ffe40-d8e7-40bb-99d8-5d41138631f1",
                "sourceHandle": "default",
                "target": "MULTIPLY-337609f2-02ec-4bf1-8f11-f1663e4de744",
                "targetHandle": "a",
                "id": "reactflow__edge-LOOP_INDEX-fa5ffe40-d8e7-40bb-99d8-5d41138631f1default-MULTIPLY-337609f2-02ec-4bf1-8f11-f1663e4de744a"
            }
        ],
        "viewport": {
            "x": 472.4845724041756,
            "y": 354.12030268540553,
            "zoom": 0.5269422050939508
        }
    }
}