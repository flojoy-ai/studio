{
    "rfInstance": {
        "nodes": [
            {
                "id": "CREATE_TASK-c2456d6b-8e16-40ee-8f22-5d002af24ce0",
                "type": "NATIONAL_INSTRUMENTS",
                "data": {
                    "id": "CREATE_TASK-c2456d6b-8e16-40ee-8f22-5d002af24ce0",
                    "label": "CREATE TASK",
                    "func": "CREATE_TASK",
                    "type": "NATIONAL_INSTRUMENTS",
                    "ctrls": {
                        "task_name": {
                            "type": "str",
                            "default": null,
                            "desc": "The name of the task to create.",
                            "overload": null,
                            "functionName": "CREATE_TASK",
                            "param": "task_name",
                            "value": "task"
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": null,
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": "This block does not return any meaningful data;"
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "nidaqmx",
                            "v": "0.9.0"
                        }
                    ],
                    "path": "HARDWARE/DAQ_BOARDS/NATIONAL_INSTRUMENTS/COMPACT_DAQ/CREATE_TASK/CREATE_TASK.py"
                },
                "position": {
                    "x": -1016.32183857277,
                    "y": -568.8539658026368
                },
                "width": 216,
                "height": 197,
                "selected": false,
                "positionAbsolute": {
                    "x": -1016.32183857277,
                    "y": -568.8539658026368
                },
                "dragging": false
            },
            {
                "id": "ATTACH_ANALOG_INPUT_ACCELEROMETER-da75780b-67cb-46b9-977f-55a1ef16b6bb",
                "type": "NATIONAL_INSTRUMENTS",
                "data": {
                    "id": "ATTACH_ANALOG_INPUT_ACCELEROMETER-da75780b-67cb-46b9-977f-55a1ef16b6bb",
                    "label": "ATTACH ANALOG INPUT ACCELEROMETER",
                    "func": "ATTACH_ANALOG_INPUT_ACCELEROMETER",
                    "type": "NATIONAL_INSTRUMENTS",
                    "ctrls": {
                        "task_name": {
                            "type": "str",
                            "default": null,
                            "desc": "The name of the task to attach the channel(s) to.",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_ACCELEROMETER",
                            "param": "task_name",
                            "value": "task"
                        },
                        "cDAQ_start_channel": {
                            "type": "NIDAQmxDevice",
                            "default": null,
                            "desc": "The device and channel to read from.",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_ACCELEROMETER",
                            "param": "cDAQ_start_channel",
                            "value": ""
                        },
                        "cDAQ_end_channel": {
                            "type": "NIDAQmxDevice",
                            "default": null,
                            "desc": "To read from only one channel, set this to the same as `cDAQ_start_channel`. To read from multiple channels, set this to the last channel you want to read from.",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_ACCELEROMETER",
                            "param": "cDAQ_end_channel",
                            "value": ""
                        },
                        "min_val": {
                            "type": "float",
                            "default": -5,
                            "desc": "Specifies in **units** the minimum value you expect to measure (default is -5.0).",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_ACCELEROMETER",
                            "param": "min_val",
                            "value": -5
                        },
                        "max_val": {
                            "type": "float",
                            "default": 5,
                            "desc": "Specifies in **units** the maximum value you expect to measure (default is 5.0).",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_ACCELEROMETER",
                            "param": "max_val",
                            "value": 5
                        },
                        "units": {
                            "type": "select",
                            "default": "G",
                            "options": [
                                "G",
                                "Inches per second squared",
                                "Meters per second squared"
                            ],
                            "desc": "The units to use to return accelerometer measurements (default is \"G\").",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_ACCELEROMETER",
                            "param": "units",
                            "value": "G"
                        },
                        "sensitivity": {
                            "type": "float",
                            "default": 1000,
                            "desc": "The sensitivity of the sensor. This value is in the units you specify with the `sensitivity_units` input. Refer to the sensor documentation to determine this value (default is 1000.0).",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_ACCELEROMETER",
                            "param": "sensitivity",
                            "value": 1000
                        },
                        "sensitivity_units": {
                            "type": "select",
                            "default": "Millivolts per G",
                            "options": [
                                "Millivolts per GVolts per G"
                            ],
                            "desc": "Specifies the units of the sensitivity input (default is \"Millivolts per G\").",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_ACCELEROMETER",
                            "param": "sensitivity_units",
                            "value": "Millivolts per G"
                        },
                        "current_excitation_source": {
                            "type": "select",
                            "default": "Internal",
                            "options": [
                                "External",
                                "Internal",
                                "None"
                            ],
                            "desc": "Specifies the source of excitation (default is \"Internal\").",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_ACCELEROMETER",
                            "param": "current_excitation_source",
                            "value": "Internal"
                        },
                        "current_excitation_value": {
                            "type": "float",
                            "default": 0.004,
                            "desc": "Specifies in amperes the amount of excitation to supply to the sensor. Refer to the sensor documentation to determine this value (default is 0.004).",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_ACCELEROMETER",
                            "param": "current_excitation_value",
                            "value": 0.004
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": null,
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": "This block does not return any meaningful data; it is designed for creating a task to measure acceleration using an accelerometer."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "nidaqmx",
                            "v": "0.9.0"
                        }
                    ],
                    "path": "HARDWARE/DAQ_BOARDS/NATIONAL_INSTRUMENTS/COMPACT_DAQ/ATTACH_ANALOG_INPUT_ACCELEROMETER/ATTACH_ANALOG_INPUT_ACCELEROMETER.py"
                },
                "position": {
                    "x": -622.1818438191167,
                    "y": -569.247090832075
                },
                "width": 281,
                "height": 269,
                "selected": false,
                "positionAbsolute": {
                    "x": -622.1818438191167,
                    "y": -569.247090832075
                },
                "dragging": false
            },
            {
                "id": "CONFIG_TASK_SAMPLE_CLOCK_TIMING-b45cfb87-75a2-4288-84b4-28aa5e1e5b98",
                "type": "NATIONAL_INSTRUMENTS",
                "data": {
                    "id": "CONFIG_TASK_SAMPLE_CLOCK_TIMING-b45cfb87-75a2-4288-84b4-28aa5e1e5b98",
                    "label": "CONFIG TASK SAMPLE CLOCK TIMING 1",
                    "func": "CONFIG_TASK_SAMPLE_CLOCK_TIMING",
                    "type": "NATIONAL_INSTRUMENTS",
                    "ctrls": {
                        "task_name": {
                            "type": "str",
                            "default": null,
                            "desc": "The name of the task to configure.",
                            "overload": null,
                            "functionName": "CONFIG_TASK_SAMPLE_CLOCK_TIMING",
                            "param": "task_name",
                            "value": ""
                        },
                        "sample_clock_rate": {
                            "type": "float",
                            "default": 1000,
                            "desc": "Specifies the sampling rate in samples per channel per second. If using an external source for the Sample Clock, set this input to the maximum expected rate of that clock. Uses the onboard clock of the device (default is 1000.0).",
                            "overload": null,
                            "functionName": "CONFIG_TASK_SAMPLE_CLOCK_TIMING",
                            "param": "sample_clock_rate",
                            "value": 1000
                        },
                        "number_of_samples_per_channel": {
                            "type": "int",
                            "default": 1000,
                            "desc": "Specifies the number of samples to acquire or generate for each channel in the task (default is 1000).",
                            "overload": null,
                            "functionName": "CONFIG_TASK_SAMPLE_CLOCK_TIMING",
                            "param": "number_of_samples_per_channel",
                            "value": 1000
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": null,
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": "This block does not return any meaningful data; it is designed for configuring the task's sample clock timing."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "nidaqmx",
                            "v": "0.9.0"
                        }
                    ],
                    "path": "HARDWARE/DAQ_BOARDS/NATIONAL_INSTRUMENTS/COMPACT_DAQ/CONFIG_TASK_SAMPLE_CLOCK_TIMING/CONFIG_TASK_SAMPLE_CLOCK_TIMING.py"
                },
                "position": {
                    "x": -1019.099832872929,
                    "y": -146.41406399686753
                },
                "width": 216,
                "height": 341,
                "selected": false,
                "positionAbsolute": {
                    "x": -1019.099832872929,
                    "y": -146.41406399686753
                },
                "dragging": false
            },
            {
                "id": "READ_TASK-bf8538b1-3d6e-47c9-ac45-1a3ff2c722f6",
                "type": "NATIONAL_INSTRUMENTS",
                "data": {
                    "id": "READ_TASK-bf8538b1-3d6e-47c9-ac45-1a3ff2c722f6",
                    "label": "READ TASK",
                    "func": "READ_TASK",
                    "type": "NATIONAL_INSTRUMENTS",
                    "ctrls": {
                        "task_name": {
                            "type": "str",
                            "default": null,
                            "desc": "The name of the task to read from.",
                            "overload": null,
                            "functionName": "READ_TASK",
                            "param": "task_name",
                            "value": "task"
                        },
                        "number_of_samples_per_channel": {
                            "type": "int",
                            "default": 1,
                            "desc": "Number of samples to read (default is 1).",
                            "overload": null,
                            "functionName": "READ_TASK",
                            "param": "number_of_samples_per_channel",
                            "value": 100
                        },
                        "timeout": {
                            "type": "float",
                            "default": 10,
                            "desc": "Time to wait for samples to become available. If set to 0, the method tries once to read the requested samples and returns an error if it is unable to (default is 10.0 seconds).",
                            "overload": null,
                            "functionName": "READ_TASK",
                            "param": "timeout",
                            "value": 10
                        },
                        "wait_infinitely": {
                            "type": "bool",
                            "default": false,
                            "desc": "If True, the method waits indefinitely for samples to become available. If False, the method waits for the amount of time specified by `timeout` (default is False).",
                            "overload": null,
                            "functionName": "READ_TASK",
                            "param": "wait_infinitely",
                            "value": false
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": null,
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Vector|Matrix",
                            "desc": "Samples read from the device."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "nidaqmx",
                            "v": "0.9.0"
                        }
                    ],
                    "path": "HARDWARE/DAQ_BOARDS/NATIONAL_INSTRUMENTS/COMPACT_DAQ/READ_TASK/READ_TASK.py"
                },
                "position": {
                    "x": -558.3328609275836,
                    "y": -145.65021120278345
                },
                "width": 216,
                "height": 197,
                "selected": false,
                "positionAbsolute": {
                    "x": -558.3328609275836,
                    "y": -145.65021120278345
                },
                "dragging": false
            },
            {
                "id": "LINE-5e47ba94-2fe8-4a8b-b557-17d4b4f10d2b",
                "type": "VISUALIZATION",
                "data": {
                    "id": "LINE-5e47ba94-2fe8-4a8b-b557-17d4b4f10d2b",
                    "label": "LINE",
                    "func": "LINE",
                    "type": "VISUALIZATION",
                    "ctrls": {
                        "xaxis_title": {
                            "type": "str",
                            "default": "",
                            "desc": "Choose the label for the x axis.",
                            "overload": null,
                            "functionName": "LINE",
                            "param": "xaxis_title",
                            "value": ""
                        },
                        "yaxis_title": {
                            "type": "str",
                            "default": "",
                            "desc": "Choose the label for the y axis.",
                            "overload": null,
                            "functionName": "LINE",
                            "param": "yaxis_title",
                            "value": ""
                        },
                        "x_log_scale": {
                            "type": "bool",
                            "default": false,
                            "desc": null,
                            "overload": null,
                            "functionName": "LINE",
                            "param": "x_log_scale",
                            "value": false
                        },
                        "y_log_scale": {
                            "type": "bool",
                            "default": false,
                            "desc": null,
                            "overload": null,
                            "functionName": "LINE",
                            "param": "y_log_scale",
                            "value": false
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "OrderedPair|DataFrame|Matrix|Vector",
                            "desc": "the DataContainer to be visualized",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Plotly",
                            "desc": "the DataContainer containing the Plotly Line visualization of the input data"
                        }
                    ],
                    "path": "DATA/VISUALIZATION/PLOTLY/LINE/LINE.py"
                },
                "position": {
                    "x": -117.50175693641518,
                    "y": -369.4787520519229
                },
                "width": 225,
                "height": 225,
                "selected": false,
                "positionAbsolute": {
                    "x": -117.50175693641518,
                    "y": -369.4787520519229
                },
                "dragging": false
            }
        ],
        "edges": [
            {
                "id": "CREATE_TASK-c2456d6b-8e16-40ee-8f22-5d002af24ce0->ATTACH_ANALOG_INPUT_ACCELEROMETER-da75780b-67cb-46b9-977f-55a1ef16b6bb_9ccdada9-4561-4981-802c-aa3f780ebbff",
                "source": "CREATE_TASK-c2456d6b-8e16-40ee-8f22-5d002af24ce0",
                "target": "ATTACH_ANALOG_INPUT_ACCELEROMETER-da75780b-67cb-46b9-977f-55a1ef16b6bb",
                "sourceHandle": "default",
                "targetHandle": "default",
                "data": {
                    "outputType": "Any"
                }
            },
            {
                "id": "ATTACH_ANALOG_INPUT_ACCELEROMETER-da75780b-67cb-46b9-977f-55a1ef16b6bb->CONFIG_TASK_SAMPLE_CLOCK_TIMING-b45cfb87-75a2-4288-84b4-28aa5e1e5b98_10c6cedc-7d4f-4803-b533-fc2b791be42e",
                "source": "ATTACH_ANALOG_INPUT_ACCELEROMETER-da75780b-67cb-46b9-977f-55a1ef16b6bb",
                "target": "CONFIG_TASK_SAMPLE_CLOCK_TIMING-b45cfb87-75a2-4288-84b4-28aa5e1e5b98",
                "sourceHandle": "default",
                "targetHandle": "default",
                "data": {
                    "outputType": "Any"
                }
            },
            {
                "id": "CONFIG_TASK_SAMPLE_CLOCK_TIMING-b45cfb87-75a2-4288-84b4-28aa5e1e5b98->READ_TASK-bf8538b1-3d6e-47c9-ac45-1a3ff2c722f6_b37f735d-e6dc-41a3-b55a-7defe0d4abe9",
                "source": "CONFIG_TASK_SAMPLE_CLOCK_TIMING-b45cfb87-75a2-4288-84b4-28aa5e1e5b98",
                "target": "READ_TASK-bf8538b1-3d6e-47c9-ac45-1a3ff2c722f6",
                "sourceHandle": "default",
                "targetHandle": "default",
                "data": {
                    "outputType": "Any"
                }
            },
            {
                "id": "READ_TASK-bf8538b1-3d6e-47c9-ac45-1a3ff2c722f6->LINE-5e47ba94-2fe8-4a8b-b557-17d4b4f10d2b_f9149085-93d8-486e-a01e-0f3ad13e3c34",
                "source": "READ_TASK-bf8538b1-3d6e-47c9-ac45-1a3ff2c722f6",
                "target": "LINE-5e47ba94-2fe8-4a8b-b557-17d4b4f10d2b",
                "sourceHandle": "default",
                "targetHandle": "default",
                "data": {
                    "outputType": "Vector"
                }
            }
        ]
    },
    "textNodes": [],
    "controlNodes": [],
    "controlVisualizationNodes": [],
    "controlTextNodes": []
}