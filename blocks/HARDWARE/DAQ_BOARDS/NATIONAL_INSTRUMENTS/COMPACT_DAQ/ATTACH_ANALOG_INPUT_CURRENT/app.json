{
    "rfInstance": {
        "nodes": [
            {
                "width": 236,
                "height": 198,
                "id": "LOOP-94264bb9-dc7c-4c56-bd13-8f40733eaa67",
                "type": "CONTROL_FLOW",
                "data": {
                    "id": "LOOP-94264bb9-dc7c-4c56-bd13-8f40733eaa67",
                    "label": "LOOP",
                    "func": "LOOP",
                    "type": "CONTROL_FLOW",
                    "ctrls": {
                        "num_loops": {
                            "type": "int",
                            "default": -1,
                            "desc": "number of times to iterate through body nodes, default is \"-1\" meaning infinity.",
                            "overload": null,
                            "functionName": "LOOP",
                            "param": "num_loops",
                            "value": 100
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": null,
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "body",
                            "id": "body",
                            "type": "Any",
                            "desc": "Forwards the input DataContainer to the body."
                        },
                        {
                            "name": "end",
                            "id": "end",
                            "type": "Any",
                            "desc": "Forwards the input DataContainer to the end."
                        }
                    ],
                    "path": "CONTROL_FLOW/LOOPS/LOOP/LOOP.py"
                },
                "position": {
                    "x": -579.8065425704759,
                    "y": 154.87283499472358
                },
                "selected": false,
                "positionAbsolute": {
                    "x": -579.8065425704759,
                    "y": 154.87283499472358
                },
                "dragging": false
            },
            {
                "width": 236,
                "height": 140,
                "id": "TIMER-d2394f75-d927-48b3-866a-c786a31a2413",
                "type": "CONTROL_FLOW",
                "data": {
                    "id": "TIMER-d2394f75-d927-48b3-866a-c786a31a2413",
                    "label": "TIMER",
                    "func": "TIMER",
                    "type": "CONTROL_FLOW",
                    "ctrls": {
                        "sleep_time": {
                            "type": "float",
                            "default": 0,
                            "desc": "number of seconds to sleep",
                            "overload": null,
                            "functionName": "TIMER",
                            "param": "sleep_time",
                            "value": 0.01
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": null,
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": "Returns the input if one was passed in."
                        }
                    ],
                    "path": "CONTROL_FLOW/TIMERS/TIMER/TIMER.py"
                },
                "position": {
                    "x": 1025.4287907707292,
                    "y": -589.026974540539
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 1025.4287907707292,
                    "y": -589.026974540539
                },
                "dragging": false
            },
            {
                "width": 281,
                "height": 233,
                "id": "PRINT_DATACONTAINER-b0595bb5-6784-416b-9608-962c6c548454",
                "type": "DEBUGGING",
                "data": {
                    "id": "PRINT_DATACONTAINER-b0595bb5-6784-416b-9608-962c6c548454",
                    "label": "PRINT DATACONTAINER",
                    "func": "PRINT_DATACONTAINER",
                    "type": "DEBUGGING",
                    "ctrls": {},
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": "The input DataContainer to print.",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "String",
                            "desc": "String: Input datacontainer information"
                        }
                    ],
                    "path": "DEBUGGING/PRINT_DATACONTAINER/PRINT_DATACONTAINER.py"
                },
                "position": {
                    "x": 123.65573591632324,
                    "y": 3.3391855525349
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 123.65573591632324,
                    "y": 3.3391855525349
                },
                "dragging": false
            },
            {
                "id": "CREATE_TASK-be1c4df8-1c53-4bfb-8bbb-d824d30cafe1",
                "type": "NATIONAL_INSTRUMENTS",
                "data": {
                    "id": "CREATE_TASK-be1c4df8-1c53-4bfb-8bbb-d824d30cafe1",
                    "label": "CREATE TASK",
                    "func": "CREATE_TASK",
                    "type": "NATIONAL_INSTRUMENTS",
                    "ctrls": {
                        "task_name": {
                            "type": "str",
                            "default": null,
                            "desc": "The name of the task to create.",
                            "overload": null,
                            "functionName": "CREATE_TASK",
                            "param": "task_name",
                            "value": "task"
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": null,
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": "This block does not return any meaningful data;"
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "nidaqmx",
                            "v": "0.9.0"
                        }
                    ],
                    "path": "HARDWARE/DAQ_BOARDS/NATIONAL_INSTRUMENTS/COMPACT_DAQ/CREATE_TASK/CREATE_TASK.py"
                },
                "position": {
                    "x": -828.4441430231527,
                    "y": -637.8091652800948
                },
                "width": 216,
                "height": 197,
                "selected": false,
                "positionAbsolute": {
                    "x": -828.4441430231527,
                    "y": -637.8091652800948
                },
                "dragging": false
            },
            {
                "id": "ATTACH_ANALOG_INPUT_CURRENT-c759f15e-92ea-4503-b2c8-22b17f9c98a8",
                "type": "NATIONAL_INSTRUMENTS",
                "data": {
                    "id": "ATTACH_ANALOG_INPUT_CURRENT-c759f15e-92ea-4503-b2c8-22b17f9c98a8",
                    "label": "ATTACH ANALOG INPUT CURRENT",
                    "func": "ATTACH_ANALOG_INPUT_CURRENT",
                    "type": "NATIONAL_INSTRUMENTS",
                    "ctrls": {
                        "task_name": {
                            "type": "str",
                            "default": null,
                            "desc": "The name of the task to attach the channel(s) to.",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_CURRENT",
                            "param": "task_name",
                            "value": "task"
                        },
                        "cDAQ_start_channel": {
                            "type": "NIDAQmxDevice",
                            "default": null,
                            "desc": "The device and channel to read from. Flojoy will register this address as a connection.",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_CURRENT",
                            "param": "cDAQ_start_channel",
                            "value": ""
                        },
                        "cDAQ_end_channel": {
                            "type": "NIDAQmxDevice",
                            "default": null,
                            "desc": "To read from only one channel, set this to the same as `cDAQ_start_channel`. To read from multiple channels, set this to the last channel you want to read from.",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_CURRENT",
                            "param": "cDAQ_end_channel",
                            "value": ""
                        },
                        "min_val": {
                            "type": "float",
                            "default": -0.01,
                            "desc": "Specifies in **units** the minimum value you expect to measure (default is -0.01).",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_CURRENT",
                            "param": "min_val",
                            "value": -0.01
                        },
                        "max_val": {
                            "type": "float",
                            "default": 0.01,
                            "desc": "Specifies in **units** the maximum value you expect to measure (default is 0.01).",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_CURRENT",
                            "param": "max_val",
                            "value": 0.01
                        },
                        "units": {
                            "type": "select",
                            "default": "AMPS",
                            "options": [
                                "AMPS"
                            ],
                            "desc": "The units to use to return current measurements (default is \"AMPS\").",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_CURRENT",
                            "param": "units",
                            "value": "AMPS"
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": null,
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": "This block does not return any meaningful data; it is designed for creating a task to measure current."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "nidaqmx",
                            "v": "0.9.0"
                        }
                    ],
                    "path": "HARDWARE/DAQ_BOARDS/NATIONAL_INSTRUMENTS/COMPACT_DAQ/ATTACH_ANALOG_INPUT_CURRENT/ATTACH_ANALOG_INPUT_CURRENT.py"
                },
                "position": {
                    "x": -418.52421433206416,
                    "y": -634.252643836707
                },
                "width": 216,
                "height": 305,
                "selected": false,
                "positionAbsolute": {
                    "x": -418.52421433206416,
                    "y": -634.252643836707
                },
                "dragging": false
            },
            {
                "id": "CONFIG_INPUT_STREAM-f96a4ff7-4da7-4126-b1a2-a46ea0e19b57",
                "type": "NATIONAL_INSTRUMENTS",
                "data": {
                    "id": "CONFIG_INPUT_STREAM-f96a4ff7-4da7-4126-b1a2-a46ea0e19b57",
                    "label": "CONFIG INPUT STREAM",
                    "func": "CONFIG_INPUT_STREAM",
                    "type": "NATIONAL_INSTRUMENTS",
                    "ctrls": {
                        "task_name": {
                            "type": "str",
                            "default": null,
                            "desc": "The name of the task to configure.",
                            "overload": null,
                            "functionName": "CONFIG_INPUT_STREAM",
                            "param": "task_name",
                            "value": "task"
                        },
                        "timeout": {
                            "type": "float",
                            "default": 10,
                            "desc": "The amount of time, in seconds, to wait for the function to read the samples (default is 10.0 seconds).",
                            "overload": null,
                            "functionName": "CONFIG_INPUT_STREAM",
                            "param": "timeout",
                            "value": 10
                        },
                        "offset": {
                            "type": "int",
                            "default": 0,
                            "desc": "Specifies an offset in samples per channel at which to begin a read operation. This offset is relative to the location you specify with `relative_to` (default is 0).",
                            "overload": null,
                            "functionName": "CONFIG_INPUT_STREAM",
                            "param": "offset",
                            "value": 0
                        },
                        "relative_to": {
                            "type": "select",
                            "default": "Current Read Position",
                            "options": [
                                "Current Read Position",
                                "First Pretrigger Sample",
                                "First Sample",
                                "Reference Trigger",
                                "Most Recent Sample"
                            ],
                            "desc": "Specifies the point in the buffer at which to begin a read operation. Valid options are:\n- \"First Pretrigger Sample\"\n- \"First Sample\"\n- \"Reference Trigger\"\n- \"Most Recent Sample\"\n- \"Current Read Position\" (default)",
                            "overload": null,
                            "functionName": "CONFIG_INPUT_STREAM",
                            "param": "relative_to",
                            "value": "Current Read Position"
                        },
                        "overwrite": {
                            "type": "bool",
                            "default": false,
                            "desc": "Specifies whether to overwrite samples in the buffer that you have not yet read. If True, overwrite unread samples; if False, do not overwrite unread samples (default is False).",
                            "overload": null,
                            "functionName": "CONFIG_INPUT_STREAM",
                            "param": "overwrite",
                            "value": true
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": null,
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": "This block does not return any meaningful data; it is designed for configuring the input stream properties."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "nidaqmx",
                            "v": "0.9.0"
                        }
                    ],
                    "path": "HARDWARE/DAQ_BOARDS/NATIONAL_INSTRUMENTS/COMPACT_DAQ/CONFIG_INPUT_STREAM/CONFIG_INPUT_STREAM.py"
                },
                "position": {
                    "x": -1.9235490657405876,
                    "y": -636.2682866662828
                },
                "width": 216,
                "height": 269,
                "selected": false,
                "positionAbsolute": {
                    "x": -1.9235490657405876,
                    "y": -636.2682866662828
                },
                "dragging": false
            },
            {
                "id": "READ_INPUT_STREAM-ebbb14fe-c137-44e2-b1ec-a2fc5fb0660a",
                "type": "NATIONAL_INSTRUMENTS",
                "data": {
                    "id": "READ_INPUT_STREAM-ebbb14fe-c137-44e2-b1ec-a2fc5fb0660a",
                    "label": "READ INPUT STREAM",
                    "func": "READ_INPUT_STREAM",
                    "type": "NATIONAL_INSTRUMENTS",
                    "ctrls": {
                        "task_name": {
                            "type": "str",
                            "default": null,
                            "desc": "The name of the task to read from.",
                            "overload": null,
                            "functionName": "READ_INPUT_STREAM",
                            "param": "task_name",
                            "value": "task"
                        },
                        "read_all": {
                            "type": "bool",
                            "default": false,
                            "desc": "If True, reads all available samples in the buffer. If False, reads the number of samples specified in `number_of_samples_per_channel` (default is False).",
                            "overload": null,
                            "functionName": "READ_INPUT_STREAM",
                            "param": "read_all",
                            "value": false
                        },
                        "number_of_samples_per_channel": {
                            "type": "int",
                            "default": 1000,
                            "desc": "The number of samples per channel to read (default is 1000).",
                            "overload": null,
                            "functionName": "READ_INPUT_STREAM",
                            "param": "number_of_samples_per_channel",
                            "value": 10
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": null,
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Vector",
                            "desc": "Returns data in an interleaved or non-interleaved 1D array, depending on the raw ordering of the device. Refer to your device documentation for more information."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "nidaqmx",
                            "v": "0.9.0"
                        }
                    ],
                    "path": "HARDWARE/DAQ_BOARDS/NATIONAL_INSTRUMENTS/COMPACT_DAQ/READ_INPUT_STREAM/READ_INPUT_STREAM.py"
                },
                "position": {
                    "x": -825.1597365755465,
                    "y": -168.42195714642173
                },
                "width": 216,
                "height": 233,
                "selected": false,
                "positionAbsolute": {
                    "x": -825.1597365755465,
                    "y": -168.42195714642173
                },
                "dragging": false
            },
            {
                "id": "READ_INPUT_STREAM_INTO_BUFFER-da01164b-847e-481c-96b9-9f7925de036d",
                "type": "NATIONAL_INSTRUMENTS",
                "data": {
                    "id": "READ_INPUT_STREAM_INTO_BUFFER-da01164b-847e-481c-96b9-9f7925de036d",
                    "label": "READ INPUT STREAM INTO BUFFER",
                    "func": "READ_INPUT_STREAM_INTO_BUFFER",
                    "type": "NATIONAL_INSTRUMENTS",
                    "ctrls": {
                        "task_name": {
                            "type": "str",
                            "default": null,
                            "desc": "The name of the task to read from.",
                            "overload": null,
                            "functionName": "READ_INPUT_STREAM_INTO_BUFFER",
                            "param": "task_name",
                            "value": "task"
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "buffer",
                            "id": "buffer",
                            "type": "Vector",
                            "desc": "Reads raw samples from the specified task or virtual channels into this pre-allocated buffer.\nEnsure that the buffer size is appropriate for the expected number of samples and the raw sample size.",
                            "multiple": false
                        },
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": "Special parameter used by Flojoy to connect blocks together.",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Vector",
                            "desc": "Returns data in an interleaved or non-interleaved 1D array, depending on the raw ordering of the device. Refer to your device documentation for more information."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "nidaqmx",
                            "v": "0.9.0"
                        }
                    ],
                    "path": "HARDWARE/DAQ_BOARDS/NATIONAL_INSTRUMENTS/COMPACT_DAQ/READ_INPUT_STREAM_INTO_BUFFER/READ_INPUT_STREAM_INTO_BUFFER.py"
                },
                "position": {
                    "x": -260.5215188060889,
                    "y": -147.77678007679503
                },
                "width": 216,
                "height": 270,
                "selected": false,
                "positionAbsolute": {
                    "x": -260.5215188060889,
                    "y": -147.77678007679503
                },
                "dragging": false
            },
            {
                "id": "LINE-1e561b17-5a06-4ca0-8b56-31aa51208f7b",
                "type": "VISUALIZATION",
                "data": {
                    "id": "LINE-1e561b17-5a06-4ca0-8b56-31aa51208f7b",
                    "label": "LINE 2",
                    "func": "LINE",
                    "type": "VISUALIZATION",
                    "ctrls": {
                        "xaxis_title": {
                            "type": "str",
                            "default": "",
                            "desc": "Choose the label for the x axis.",
                            "overload": null,
                            "functionName": "LINE",
                            "param": "xaxis_title",
                            "value": ""
                        },
                        "yaxis_title": {
                            "type": "str",
                            "default": "",
                            "desc": "Choose the label for the y axis.",
                            "overload": null,
                            "functionName": "LINE",
                            "param": "yaxis_title",
                            "value": ""
                        },
                        "x_log_scale": {
                            "type": "bool",
                            "default": false,
                            "desc": null,
                            "overload": null,
                            "functionName": "LINE",
                            "param": "x_log_scale",
                            "value": false
                        },
                        "y_log_scale": {
                            "type": "bool",
                            "default": false,
                            "desc": null,
                            "overload": null,
                            "functionName": "LINE",
                            "param": "y_log_scale",
                            "value": false
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "OrderedPair|DataFrame|Matrix|Vector",
                            "desc": "the DataContainer to be visualized",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Plotly",
                            "desc": "the DataContainer containing the Plotly Line visualization of the input data"
                        }
                    ],
                    "path": "DATA/VISUALIZATION/PLOTLY/LINE/LINE.py"
                },
                "position": {
                    "x": 651.643606544975,
                    "y": -659.4435262142733
                },
                "width": 225,
                "height": 225,
                "selected": false,
                "positionAbsolute": {
                    "x": 651.643606544975,
                    "y": -659.4435262142733
                },
                "dragging": false
            },
            {
                "id": "LINE-a5acf756-e33f-4ffb-91b3-28ff0372df86",
                "type": "VISUALIZATION",
                "data": {
                    "id": "LINE-a5acf756-e33f-4ffb-91b3-28ff0372df86",
                    "label": "LINE 3",
                    "func": "LINE",
                    "type": "VISUALIZATION",
                    "ctrls": {
                        "xaxis_title": {
                            "type": "str",
                            "default": "",
                            "desc": "Choose the label for the x axis.",
                            "overload": null,
                            "functionName": "LINE",
                            "param": "xaxis_title",
                            "value": ""
                        },
                        "yaxis_title": {
                            "type": "str",
                            "default": "",
                            "desc": "Choose the label for the y axis.",
                            "overload": null,
                            "functionName": "LINE",
                            "param": "yaxis_title",
                            "value": ""
                        },
                        "x_log_scale": {
                            "type": "bool",
                            "default": false,
                            "desc": null,
                            "overload": null,
                            "functionName": "LINE",
                            "param": "x_log_scale",
                            "value": false
                        },
                        "y_log_scale": {
                            "type": "bool",
                            "default": false,
                            "desc": null,
                            "overload": null,
                            "functionName": "LINE",
                            "param": "y_log_scale",
                            "value": false
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "OrderedPair|DataFrame|Matrix|Vector",
                            "desc": "the DataContainer to be visualized",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Plotly",
                            "desc": "the DataContainer containing the Plotly Line visualization of the input data"
                        }
                    ],
                    "path": "DATA/VISUALIZATION/PLOTLY/LINE/LINE.py"
                },
                "position": {
                    "x": -951.0403673823237,
                    "y": 199.17876501594583
                },
                "width": 225,
                "height": 225,
                "selected": false,
                "positionAbsolute": {
                    "x": -951.0403673823237,
                    "y": 199.17876501594583
                },
                "dragging": false
            },
            {
                "id": "TEXT_VIEW-f129bbc6-a392-450f-b17d-8c9060cc3635",
                "type": "VISUALIZATION",
                "data": {
                    "id": "TEXT_VIEW-f129bbc6-a392-450f-b17d-8c9060cc3635",
                    "label": "TEXT VIEW",
                    "func": "TEXT_VIEW",
                    "type": "VISUALIZATION",
                    "ctrls": {
                        "prettify": {
                            "type": "bool",
                            "default": false,
                            "desc": "Whether to prettify the displayed text (defaults to True)",
                            "overload": null,
                            "functionName": "TEXT_VIEW",
                            "param": "prettify",
                            "value": false
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "String|Boolean",
                            "desc": "The DataContainer to be visualized in text format",
                            "multiple": false
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "String",
                            "desc": "The DataContainer containing text data"
                        }
                    ],
                    "path": "DATA/VISUALIZATION/DATA_STRUCTURE/TEXT_VIEW/TEXT_VIEW.py"
                },
                "position": {
                    "x": 626.6194168750812,
                    "y": -26.816380754317606
                },
                "width": 225,
                "height": 225,
                "selected": false,
                "positionAbsolute": {
                    "x": 626.6194168750812,
                    "y": -26.816380754317606
                },
                "dragging": false
            }
        ],
        "edges": [
            {
                "id": "CREATE_TASK-be1c4df8-1c53-4bfb-8bbb-d824d30cafe1->ATTACH_ANALOG_INPUT_CURRENT-c759f15e-92ea-4503-b2c8-22b17f9c98a8_d0357c66-4118-4107-a07e-f416b0eefd66",
                "source": "CREATE_TASK-be1c4df8-1c53-4bfb-8bbb-d824d30cafe1",
                "target": "ATTACH_ANALOG_INPUT_CURRENT-c759f15e-92ea-4503-b2c8-22b17f9c98a8",
                "sourceHandle": "default",
                "targetHandle": "default",
                "data": {
                    "outputType": "Any"
                }
            },
            {
                "id": "ATTACH_ANALOG_INPUT_CURRENT-c759f15e-92ea-4503-b2c8-22b17f9c98a8->CONFIG_INPUT_STREAM-f96a4ff7-4da7-4126-b1a2-a46ea0e19b57_798d295c-50ac-439a-a26c-b3019ca50bdd",
                "source": "ATTACH_ANALOG_INPUT_CURRENT-c759f15e-92ea-4503-b2c8-22b17f9c98a8",
                "target": "CONFIG_INPUT_STREAM-f96a4ff7-4da7-4126-b1a2-a46ea0e19b57",
                "sourceHandle": "default",
                "targetHandle": "default",
                "data": {
                    "outputType": "Any"
                }
            },
            {
                "id": "CONFIG_INPUT_STREAM-f96a4ff7-4da7-4126-b1a2-a46ea0e19b57->READ_INPUT_STREAM-ebbb14fe-c137-44e2-b1ec-a2fc5fb0660a_a1ba61e4-2cd4-4c45-9ec7-be7403239681",
                "source": "CONFIG_INPUT_STREAM-f96a4ff7-4da7-4126-b1a2-a46ea0e19b57",
                "target": "READ_INPUT_STREAM-ebbb14fe-c137-44e2-b1ec-a2fc5fb0660a",
                "sourceHandle": "default",
                "targetHandle": "default",
                "data": {
                    "outputType": "Any"
                }
            },
            {
                "id": "READ_INPUT_STREAM-ebbb14fe-c137-44e2-b1ec-a2fc5fb0660a->READ_INPUT_STREAM_INTO_BUFFER-da01164b-847e-481c-96b9-9f7925de036d_a397cdb7-5934-4776-ba05-f239dd1009d3",
                "source": "READ_INPUT_STREAM-ebbb14fe-c137-44e2-b1ec-a2fc5fb0660a",
                "target": "READ_INPUT_STREAM_INTO_BUFFER-da01164b-847e-481c-96b9-9f7925de036d",
                "sourceHandle": "default",
                "targetHandle": "buffer",
                "data": {
                    "outputType": "Vector"
                }
            },
            {
                "id": "LOOP-94264bb9-dc7c-4c56-bd13-8f40733eaa67->READ_INPUT_STREAM_INTO_BUFFER-da01164b-847e-481c-96b9-9f7925de036d_9370ab1a-302e-4374-9538-1ae5b8778e8d",
                "source": "LOOP-94264bb9-dc7c-4c56-bd13-8f40733eaa67",
                "target": "READ_INPUT_STREAM_INTO_BUFFER-da01164b-847e-481c-96b9-9f7925de036d",
                "sourceHandle": "body",
                "targetHandle": "default",
                "data": {
                    "outputType": "Any"
                }
            },
            {
                "id": "READ_INPUT_STREAM_INTO_BUFFER-da01164b-847e-481c-96b9-9f7925de036d->PRINT_DATACONTAINER-b0595bb5-6784-416b-9608-962c6c548454_aa45bae8-ad2d-4e54-bc97-4664182fd51e",
                "source": "READ_INPUT_STREAM_INTO_BUFFER-da01164b-847e-481c-96b9-9f7925de036d",
                "target": "PRINT_DATACONTAINER-b0595bb5-6784-416b-9608-962c6c548454",
                "sourceHandle": "default",
                "targetHandle": "default",
                "data": {
                    "outputType": "Vector"
                }
            },
            {
                "id": "READ_INPUT_STREAM-ebbb14fe-c137-44e2-b1ec-a2fc5fb0660a->LINE-a5acf756-e33f-4ffb-91b3-28ff0372df86_3c747666-9015-42ca-8ef8-f2ec03b4ac9b",
                "source": "READ_INPUT_STREAM-ebbb14fe-c137-44e2-b1ec-a2fc5fb0660a",
                "target": "LINE-a5acf756-e33f-4ffb-91b3-28ff0372df86",
                "sourceHandle": "default",
                "targetHandle": "default",
                "data": {
                    "outputType": "Vector"
                }
            },
            {
                "id": "READ_INPUT_STREAM_INTO_BUFFER-da01164b-847e-481c-96b9-9f7925de036d->LINE-1e561b17-5a06-4ca0-8b56-31aa51208f7b_204d3db9-a757-437b-9a8f-0e7c5fc3c4f0",
                "source": "READ_INPUT_STREAM_INTO_BUFFER-da01164b-847e-481c-96b9-9f7925de036d",
                "target": "LINE-1e561b17-5a06-4ca0-8b56-31aa51208f7b",
                "sourceHandle": "default",
                "targetHandle": "default",
                "data": {
                    "outputType": "Vector"
                }
            },
            {
                "id": "LINE-1e561b17-5a06-4ca0-8b56-31aa51208f7b->TIMER-d2394f75-d927-48b3-866a-c786a31a2413_67f5bb8a-2aee-45af-9454-2e95322c992a",
                "source": "LINE-1e561b17-5a06-4ca0-8b56-31aa51208f7b",
                "target": "TIMER-d2394f75-d927-48b3-866a-c786a31a2413",
                "sourceHandle": "default",
                "targetHandle": "default",
                "data": {
                    "outputType": "Plotly"
                }
            },
            {
                "id": "PRINT_DATACONTAINER-b0595bb5-6784-416b-9608-962c6c548454->TEXT_VIEW-f129bbc6-a392-450f-b17d-8c9060cc3635_149ed269-1baa-4862-a6c2-04c95f9f4aad",
                "source": "PRINT_DATACONTAINER-b0595bb5-6784-416b-9608-962c6c548454",
                "target": "TEXT_VIEW-f129bbc6-a392-450f-b17d-8c9060cc3635",
                "sourceHandle": "default",
                "targetHandle": "default",
                "data": {
                    "outputType": "String"
                }
            }
        ]
    },
    "textNodes": [],
    "controlNodes": [],
    "controlVisualizationNodes": [],
    "controlTextNodes": []
}