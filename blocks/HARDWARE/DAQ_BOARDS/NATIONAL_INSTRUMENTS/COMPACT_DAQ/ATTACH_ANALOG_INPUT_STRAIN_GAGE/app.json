{
    "rfInstance": {
        "nodes": [
            {
                "width": 192,
                "height": 192,
                "id": "READ_TASK-eeab7450-8d5f-42f5-86fc-3c2a63f0d691",
                "type": "HARDWARE",
                "data": {
                    "id": "READ_TASK-eeab7450-8d5f-42f5-86fc-3c2a63f0d691",
                    "label": "READ TASK",
                    "func": "READ_TASK",
                    "type": "HARDWARE",
                    "ctrls": {
                        "task_name": {
                            "type": "str",
                            "default": null,
                            "desc": "The name of the task to read from.",
                            "overload": null,
                            "functionName": "READ_TASK",
                            "param": "task_name",
                            "value": "task"
                        },
                        "number_of_samples_per_channel": {
                            "type": "int",
                            "default": 1,
                            "desc": "Number of samples to read (default is 1).",
                            "overload": null,
                            "functionName": "READ_TASK",
                            "param": "number_of_samples_per_channel",
                            "value": 100
                        },
                        "timeout": {
                            "type": "float",
                            "default": 10,
                            "desc": "Time to wait for samples to become available. If set to 0, the method tries once to read the requested samples and returns an error if it is unable to (default is 10.0 seconds).",
                            "overload": null,
                            "functionName": "READ_TASK",
                            "param": "timeout",
                            "value": 10
                        },
                        "wait_infinitely": {
                            "type": "bool",
                            "default": false,
                            "desc": "If True, the method waits indefinitely for samples to become available. If False, the method waits for the amount of time specified by `timeout` (default is False).",
                            "overload": null,
                            "functionName": "READ_TASK",
                            "param": "wait_infinitely",
                            "value": false
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "multiple": false,
                            "desc": null
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Vector|Matrix",
                            "desc": "Samples read from the device."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "nidaqmx",
                            "v": "0.9.0"
                        }
                    ],
                    "path": "HARDWARE/DAQ_BOARDS/NATIONAL_INSTRUMENTS/COMPACT_DAQ/READ_TASK/READ_TASK.py"
                },
                "position": {
                    "x": -298.64277225401344,
                    "y": -167.64088133123056
                },
                "selected": false,
                "positionAbsolute": {
                    "x": -298.64277225401344,
                    "y": -167.64088133123056
                },
                "dragging": true
            },
            {
                "width": 908,
                "height": 317,
                "id": "LINE-2da5889c-c892-4db0-b7a6-a519bdea5a5f",
                "type": "VISUALIZATION",
                "data": {
                    "id": "LINE-2da5889c-c892-4db0-b7a6-a519bdea5a5f",
                    "label": "LINE",
                    "func": "LINE",
                    "type": "VISUALIZATION",
                    "ctrls": {
                        "xaxis_title": {
                            "type": "str",
                            "default": "",
                            "desc": "Choose the label for the x axis.",
                            "overload": null,
                            "functionName": "LINE",
                            "param": "xaxis_title",
                            "value": ""
                        },
                        "yaxis_title": {
                            "type": "str",
                            "default": "",
                            "desc": "Choose the label for the y axis.",
                            "overload": null,
                            "functionName": "LINE",
                            "param": "yaxis_title",
                            "value": ""
                        },
                        "x_log_scale": {
                            "type": "bool",
                            "default": false,
                            "desc": null,
                            "overload": null,
                            "functionName": "LINE",
                            "param": "x_log_scale",
                            "value": false
                        },
                        "y_log_scale": {
                            "type": "bool",
                            "default": false,
                            "desc": null,
                            "overload": null,
                            "functionName": "LINE",
                            "param": "y_log_scale",
                            "value": false
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "OrderedPair|DataFrame|Matrix|Vector",
                            "multiple": false,
                            "desc": "the DataContainer to be visualized"
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Plotly",
                            "desc": "the DataContainer containing the Plotly Line visualization of the input data"
                        }
                    ],
                    "path": "DATA/VISUALIZATION/PLOTLY/LINE/LINE.py"
                },
                "position": {
                    "x": -28.36198111987187,
                    "y": -252.16730293571464
                },
                "selected": false,
                "positionAbsolute": {
                    "x": -28.36198111987187,
                    "y": -252.16730293571464
                },
                "dragging": true,
                "style": {
                    "width": 908,
                    "height": 317
                },
                "resizing": false
            },
            {
                "width": 192,
                "height": 192,
                "id": "CONFIG_TASK_SAMPLE_CLOCK_TIMING-9c309463-9603-45a3-b29a-c5484c1aeae4",
                "type": "HARDWARE",
                "data": {
                    "id": "CONFIG_TASK_SAMPLE_CLOCK_TIMING-9c309463-9603-45a3-b29a-c5484c1aeae4",
                    "label": "CONFIG TASK SAMPLE CLOCK TIMING",
                    "func": "CONFIG_TASK_SAMPLE_CLOCK_TIMING",
                    "type": "HARDWARE",
                    "ctrls": {
                        "task_name": {
                            "type": "str",
                            "default": null,
                            "desc": "The name of the task to configure.",
                            "overload": null,
                            "functionName": "CONFIG_TASK_SAMPLE_CLOCK_TIMING",
                            "param": "task_name",
                            "value": "task"
                        },
                        "sample_clock_rate": {
                            "type": "float",
                            "default": 1000,
                            "desc": "Specifies the sampling rate in samples per channel per second. If using an external source for the Sample Clock, set this input to the maximum expected rate of that clock. Uses the onboard clock of the device (default is 1000.0).",
                            "overload": null,
                            "functionName": "CONFIG_TASK_SAMPLE_CLOCK_TIMING",
                            "param": "sample_clock_rate",
                            "value": 1000
                        },
                        "number_of_samples_per_channel": {
                            "type": "int",
                            "default": 1000,
                            "desc": "Specifies the number of samples to acquire or generate for each channel in the task (default is 1000).",
                            "overload": null,
                            "functionName": "CONFIG_TASK_SAMPLE_CLOCK_TIMING",
                            "param": "number_of_samples_per_channel",
                            "value": 1000
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "multiple": false,
                            "desc": null
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": "This block does not return any meaningful data; it is designed for configuring the task's sample clock timing."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "nidaqmx",
                            "v": "0.9.0"
                        }
                    ],
                    "path": "HARDWARE/DAQ_BOARDS/NATIONAL_INSTRUMENTS/COMPACT_DAQ/CONFIG_TASK_SAMPLE_CLOCK_TIMING/CONFIG_TASK_SAMPLE_CLOCK_TIMING.py"
                },
                "position": {
                    "x": -470.4231196616418,
                    "y": 111.98587764544806
                },
                "selected": false,
                "positionAbsolute": {
                    "x": -470.4231196616418,
                    "y": 111.98587764544806
                },
                "dragging": true
            },
            {
                "width": 192,
                "height": 192,
                "id": "ATTACH_ANALOG_INPUT_STRAIN_GAGE-d8ed1ba7-f388-4b2c-90b4-59e6b2628cb2",
                "type": "HARDWARE",
                "data": {
                    "id": "ATTACH_ANALOG_INPUT_STRAIN_GAGE-d8ed1ba7-f388-4b2c-90b4-59e6b2628cb2",
                    "label": "ATTACH ANALOG INPUT STRAIN GAGE",
                    "func": "ATTACH_ANALOG_INPUT_STRAIN_GAGE",
                    "type": "HARDWARE",
                    "ctrls": {
                        "task_name": {
                            "type": "str",
                            "default": null,
                            "desc": "The name of the task to create.",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_STRAIN_GAGE",
                            "param": "task_name",
                            "value": "task"
                        },
                        "cDAQ_start_channel": {
                            "type": "NIDAQmxDevice",
                            "default": null,
                            "desc": "The device and channel to read from.",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_STRAIN_GAGE",
                            "param": "cDAQ_start_channel",
                            "value": "cDAQ2Mod4/ai0"
                        },
                        "cDAQ_end_channel": {
                            "type": "NIDAQmxDevice",
                            "default": null,
                            "desc": "To read from only one channel, set this to the same as `cDAQ_start_channel`. To read from multiple channels, set this to the last channel you want to read from.",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_STRAIN_GAGE",
                            "param": "cDAQ_end_channel",
                            "value": "cDAQ2Mod4/ai1"
                        },
                        "min_val": {
                            "type": "float",
                            "default": -0.001,
                            "desc": "Specifies in **units** the minimum value you expect to measure (default is -0.001).",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_STRAIN_GAGE",
                            "param": "min_val",
                            "value": -0.001
                        },
                        "max_val": {
                            "type": "float",
                            "default": 0.001,
                            "desc": "Specifies in **units** the maximum value you expect to measure (default is 0.001).",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_STRAIN_GAGE",
                            "param": "max_val",
                            "value": 0.001
                        },
                        "units": {
                            "type": "select",
                            "options": [
                                "STRAIN"
                            ],
                            "default": "STRAIN",
                            "desc": "The units to use to return strain measurements (default is \"STRAIN\").",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_STRAIN_GAGE",
                            "param": "units",
                            "value": "STRAIN"
                        },
                        "strain_config": {
                            "type": "select",
                            "options": [
                                "Full brige 1",
                                "Full brige 2",
                                "Full brige 3",
                                "Half brige 1",
                                "Half brige 2",
                                "Quarter brige 1",
                                "Quarter brige 2"
                            ],
                            "default": "Full brige 1",
                            "desc": "Specifies information about the bridge configuration and measurement (default is \"Full Bridge 1\").",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_STRAIN_GAGE",
                            "param": "strain_config",
                            "value": "Quarter brige 1"
                        },
                        "voltage_excitation_source": {
                            "type": "select",
                            "options": [
                                "None",
                                "External",
                                "Internal"
                            ],
                            "default": "Internal",
                            "desc": "Specifies the source of excitation (default is \"Internal\").",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_STRAIN_GAGE",
                            "param": "voltage_excitation_source",
                            "value": "Internal"
                        },
                        "voltage_excitation_value": {
                            "type": "float",
                            "default": 2.5,
                            "desc": "Specifies in volts the amount of excitation to supply to the bridge (default is 2.5).",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_STRAIN_GAGE",
                            "param": "voltage_excitation_value",
                            "value": 3.3
                        },
                        "gage_factor": {
                            "type": "float",
                            "default": 2,
                            "desc": "Contains information about the strain gage and measurement (default is 2.0).",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_STRAIN_GAGE",
                            "param": "gage_factor",
                            "value": 2
                        },
                        "initial_bridge_voltage": {
                            "type": "float",
                            "default": 0,
                            "desc": "Specifies the initial voltage across the bridge before any strain is applied (default is 0.0).",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_STRAIN_GAGE",
                            "param": "initial_bridge_voltage",
                            "value": 0
                        },
                        "nominal_gage_resistance": {
                            "type": "float",
                            "default": 350,
                            "desc": "Contains information about the strain gage and measurement (default is 350.0).",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_STRAIN_GAGE",
                            "param": "nominal_gage_resistance",
                            "value": 350
                        },
                        "poisson_ratio": {
                            "type": "float",
                            "default": 0.3,
                            "desc": "Contains information about the strain gage and measurement (default is 0.3).",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_STRAIN_GAGE",
                            "param": "poisson_ratio",
                            "value": 0.3
                        },
                        "lead_wire_resistance": {
                            "type": "float",
                            "default": 0,
                            "desc": "Specifies the resistance of the lead wires connected to the strain gage (default is 0.0).",
                            "overload": null,
                            "functionName": "ATTACH_ANALOG_INPUT_STRAIN_GAGE",
                            "param": "lead_wire_resistance",
                            "value": 0
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "multiple": false,
                            "desc": null
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": "This block does not return any meaningful data; it is designed for creating a task to measure strain."
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "nidaqmx",
                            "v": "0.9.0"
                        }
                    ],
                    "path": "HARDWARE/DAQ_BOARDS/NATIONAL_INSTRUMENTS/COMPACT_DAQ/ATTACH_ANALOG_INPUT_STRAIN_GAGE/ATTACH_ANALOG_INPUT_STRAIN_GAGE.py"
                },
                "position": {
                    "x": -556.9493161742778,
                    "y": -119.1414166774826
                },
                "selected": true,
                "positionAbsolute": {
                    "x": -556.9493161742778,
                    "y": -119.1414166774826
                },
                "dragging": true
            },
            {
                "width": 192,
                "height": 192,
                "id": "CREATE_TASK-409ba857-06c2-4be4-bd14-1eca1d4654c9",
                "type": "HARDWARE",
                "data": {
                    "id": "CREATE_TASK-409ba857-06c2-4be4-bd14-1eca1d4654c9",
                    "label": "CREATE TASK",
                    "func": "CREATE_TASK",
                    "type": "HARDWARE",
                    "ctrls": {
                        "task_name": {
                            "type": "str",
                            "default": null,
                            "desc": "The name of the task to create.",
                            "overload": null,
                            "functionName": "CREATE_TASK",
                            "param": "task_name",
                            "value": "task"
                        }
                    },
                    "initCtrls": {},
                    "inputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "multiple": false,
                            "desc": null
                        }
                    ],
                    "outputs": [
                        {
                            "name": "default",
                            "id": "default",
                            "type": "Any",
                            "desc": "This block does not return any meaningful data;"
                        }
                    ],
                    "pip_dependencies": [
                        {
                            "name": "nidaqmx",
                            "v": "0.9.0"
                        }
                    ],
                    "path": "HARDWARE/DAQ_BOARDS/NATIONAL_INSTRUMENTS/COMPACT_DAQ/CREATE_TASK/CREATE_TASK.py"
                },
                "position": {
                    "x": -623.7637565963919,
                    "y": -348.65602177036146
                },
                "selected": false,
                "positionAbsolute": {
                    "x": -623.7637565963919,
                    "y": -348.65602177036146
                },
                "dragging": true
            }
        ],
        "edges": [
            {
                "source": "CONFIG_TASK_SAMPLE_CLOCK_TIMING-9c309463-9603-45a3-b29a-c5484c1aeae4",
                "sourceHandle": "default",
                "target": "READ_TASK-eeab7450-8d5f-42f5-86fc-3c2a63f0d691",
                "targetHandle": "default",
                "id": "reactflow__edge-CONFIG_TASK_SAMPLE_CLOCK_TIMING-9c309463-9603-45a3-b29a-c5484c1aeae4default-READ_TASK-eeab7450-8d5f-42f5-86fc-3c2a63f0d691default"
            },
            {
                "source": "READ_TASK-eeab7450-8d5f-42f5-86fc-3c2a63f0d691",
                "sourceHandle": "default",
                "target": "LINE-2da5889c-c892-4db0-b7a6-a519bdea5a5f",
                "targetHandle": "default",
                "id": "reactflow__edge-READ_TASK-eeab7450-8d5f-42f5-86fc-3c2a63f0d691default-LINE-2da5889c-c892-4db0-b7a6-a519bdea5a5fdefault"
            },
            {
                "source": "ATTACH_ANALOG_INPUT_STRAIN_GAGE-d8ed1ba7-f388-4b2c-90b4-59e6b2628cb2",
                "sourceHandle": "default",
                "target": "CONFIG_TASK_SAMPLE_CLOCK_TIMING-9c309463-9603-45a3-b29a-c5484c1aeae4",
                "targetHandle": "default",
                "id": "reactflow__edge-ATTACH_ANALOG_INPUT_STRAIN_GAGE-d8ed1ba7-f388-4b2c-90b4-59e6b2628cb2default-CONFIG_TASK_SAMPLE_CLOCK_TIMING-9c309463-9603-45a3-b29a-c5484c1aeae4default"
            },
            {
                "source": "CREATE_TASK-409ba857-06c2-4be4-bd14-1eca1d4654c9",
                "sourceHandle": "default",
                "target": "ATTACH_ANALOG_INPUT_STRAIN_GAGE-d8ed1ba7-f388-4b2c-90b4-59e6b2628cb2",
                "targetHandle": "default",
                "id": "reactflow__edge-CREATE_TASK-409ba857-06c2-4be4-bd14-1eca1d4654c9default-ATTACH_ANALOG_INPUT_STRAIN_GAGE-d8ed1ba7-f388-4b2c-90b4-59e6b2628cb2default"
            }
        ],
        "viewport": {
            "x": 933.9352888714216,
            "y": 429.22336189960754,
            "zoom": 0.7039763227823722
        }
    },
    "name": "app",
    "textNodes": []
}